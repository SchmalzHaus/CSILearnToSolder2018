

Microchip Technology PIC PRO Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Oct 17 16:54:39 2018

Microchip Technology Omniscient Code Generator v2.00 (PRO mode) build 20180527130849
     1                           	processor	12F1572
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	pa_nodes0,global,class=CODE,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.00
    48                           ; Generated 27/05/2018 GMT
    49                           ; 
    50                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC12F1572 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  008C                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  010C                     	;# 
   123  0111                     	;# 
   124  0112                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0118                     	;# 
   129  0119                     	;# 
   130  011D                     	;# 
   131  011D                     	;# 
   132  018C                     	;# 
   133  0191                     	;# 
   134  0191                     	;# 
   135  0192                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0194                     	;# 
   139  0195                     	;# 
   140  0196                     	;# 
   141  0197                     	;# 
   142  0199                     	;# 
   143  019A                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019E                     	;# 
   149  019F                     	;# 
   150  020C                     	;# 
   151  028C                     	;# 
   152  030C                     	;# 
   153  038C                     	;# 
   154  0391                     	;# 
   155  0392                     	;# 
   156  0393                     	;# 
   157  0691                     	;# 
   158  0692                     	;# 
   159  0693                     	;# 
   160  0694                     	;# 
   161  0695                     	;# 
   162  0D8E                     	;# 
   163  0D8F                     	;# 
   164  0D90                     	;# 
   165  0D91                     	;# 
   166  0D91                     	;# 
   167  0D92                     	;# 
   168  0D93                     	;# 
   169  0D93                     	;# 
   170  0D94                     	;# 
   171  0D95                     	;# 
   172  0D95                     	;# 
   173  0D96                     	;# 
   174  0D97                     	;# 
   175  0D97                     	;# 
   176  0D98                     	;# 
   177  0D99                     	;# 
   178  0D99                     	;# 
   179  0D9A                     	;# 
   180  0D9B                     	;# 
   181  0D9C                     	;# 
   182  0D9C                     	;# 
   183  0D9D                     	;# 
   184  0D9D                     	;# 
   185  0D9E                     	;# 
   186  0D9F                     	;# 
   187  0DA0                     	;# 
   188  0DA1                     	;# 
   189  0DA1                     	;# 
   190  0DA2                     	;# 
   191  0DA3                     	;# 
   192  0DA3                     	;# 
   193  0DA4                     	;# 
   194  0DA5                     	;# 
   195  0DA5                     	;# 
   196  0DA6                     	;# 
   197  0DA7                     	;# 
   198  0DA7                     	;# 
   199  0DA8                     	;# 
   200  0DA9                     	;# 
   201  0DA9                     	;# 
   202  0DAA                     	;# 
   203  0DAB                     	;# 
   204  0DAC                     	;# 
   205  0DAC                     	;# 
   206  0DAD                     	;# 
   207  0DAD                     	;# 
   208  0DAE                     	;# 
   209  0DAF                     	;# 
   210  0DB0                     	;# 
   211  0DB1                     	;# 
   212  0DB1                     	;# 
   213  0DB2                     	;# 
   214  0DB3                     	;# 
   215  0DB3                     	;# 
   216  0DB4                     	;# 
   217  0DB5                     	;# 
   218  0DB5                     	;# 
   219  0DB6                     	;# 
   220  0DB7                     	;# 
   221  0DB7                     	;# 
   222  0DB8                     	;# 
   223  0DB9                     	;# 
   224  0DB9                     	;# 
   225  0DBA                     	;# 
   226  0DBB                     	;# 
   227  0DBC                     	;# 
   228  0DBC                     	;# 
   229  0DBD                     	;# 
   230  0DBD                     	;# 
   231  0DBE                     	;# 
   232  0DBF                     	;# 
   233  0DC0                     	;# 
   234  0FE4                     	;# 
   235  0FE5                     	;# 
   236  0FE6                     	;# 
   237  0FE7                     	;# 
   238  0FE8                     	;# 
   239  0FE8                     	;# 
   240  0FE9                     	;# 
   241  0FEA                     	;# 
   242  0FEA                     	;# 
   243  0FEB                     	;# 
   244  0FED                     	;# 
   245  0FEE                     	;# 
   246  0FEE                     	;# 
   247  0FEF                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  008C                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  010C                     	;# 
   290  0111                     	;# 
   291  0112                     	;# 
   292  0115                     	;# 
   293  0116                     	;# 
   294  0117                     	;# 
   295  0118                     	;# 
   296  0119                     	;# 
   297  011D                     	;# 
   298  011D                     	;# 
   299  018C                     	;# 
   300  0191                     	;# 
   301  0191                     	;# 
   302  0192                     	;# 
   303  0193                     	;# 
   304  0193                     	;# 
   305  0194                     	;# 
   306  0195                     	;# 
   307  0196                     	;# 
   308  0197                     	;# 
   309  0199                     	;# 
   310  019A                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019C                     	;# 
   314  019D                     	;# 
   315  019E                     	;# 
   316  019F                     	;# 
   317  020C                     	;# 
   318  028C                     	;# 
   319  030C                     	;# 
   320  038C                     	;# 
   321  0391                     	;# 
   322  0392                     	;# 
   323  0393                     	;# 
   324  0691                     	;# 
   325  0692                     	;# 
   326  0693                     	;# 
   327  0694                     	;# 
   328  0695                     	;# 
   329  0D8E                     	;# 
   330  0D8F                     	;# 
   331  0D90                     	;# 
   332  0D91                     	;# 
   333  0D91                     	;# 
   334  0D92                     	;# 
   335  0D93                     	;# 
   336  0D93                     	;# 
   337  0D94                     	;# 
   338  0D95                     	;# 
   339  0D95                     	;# 
   340  0D96                     	;# 
   341  0D97                     	;# 
   342  0D97                     	;# 
   343  0D98                     	;# 
   344  0D99                     	;# 
   345  0D99                     	;# 
   346  0D9A                     	;# 
   347  0D9B                     	;# 
   348  0D9C                     	;# 
   349  0D9C                     	;# 
   350  0D9D                     	;# 
   351  0D9D                     	;# 
   352  0D9E                     	;# 
   353  0D9F                     	;# 
   354  0DA0                     	;# 
   355  0DA1                     	;# 
   356  0DA1                     	;# 
   357  0DA2                     	;# 
   358  0DA3                     	;# 
   359  0DA3                     	;# 
   360  0DA4                     	;# 
   361  0DA5                     	;# 
   362  0DA5                     	;# 
   363  0DA6                     	;# 
   364  0DA7                     	;# 
   365  0DA7                     	;# 
   366  0DA8                     	;# 
   367  0DA9                     	;# 
   368  0DA9                     	;# 
   369  0DAA                     	;# 
   370  0DAB                     	;# 
   371  0DAC                     	;# 
   372  0DAC                     	;# 
   373  0DAD                     	;# 
   374  0DAD                     	;# 
   375  0DAE                     	;# 
   376  0DAF                     	;# 
   377  0DB0                     	;# 
   378  0DB1                     	;# 
   379  0DB1                     	;# 
   380  0DB2                     	;# 
   381  0DB3                     	;# 
   382  0DB3                     	;# 
   383  0DB4                     	;# 
   384  0DB5                     	;# 
   385  0DB5                     	;# 
   386  0DB6                     	;# 
   387  0DB7                     	;# 
   388  0DB7                     	;# 
   389  0DB8                     	;# 
   390  0DB9                     	;# 
   391  0DB9                     	;# 
   392  0DBA                     	;# 
   393  0DBB                     	;# 
   394  0DBC                     	;# 
   395  0DBC                     	;# 
   396  0DBD                     	;# 
   397  0DBD                     	;# 
   398  0DBE                     	;# 
   399  0DBF                     	;# 
   400  0DC0                     	;# 
   401  0FE4                     	;# 
   402  0FE5                     	;# 
   403  0FE6                     	;# 
   404  0FE7                     	;# 
   405  0FE8                     	;# 
   406  0FE8                     	;# 
   407  0FE9                     	;# 
   408  0FEA                     	;# 
   409  0FEA                     	;# 
   410  0FEB                     	;# 
   411  0FED                     	;# 
   412  0FEE                     	;# 
   413  0FEE                     	;# 
   414  0FEF                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0008                     	;# 
   424  0009                     	;# 
   425  000A                     	;# 
   426  000B                     	;# 
   427  000C                     	;# 
   428  0011                     	;# 
   429  0012                     	;# 
   430  0013                     	;# 
   431  0015                     	;# 
   432  0016                     	;# 
   433  0016                     	;# 
   434  0017                     	;# 
   435  0018                     	;# 
   436  0019                     	;# 
   437  001A                     	;# 
   438  001B                     	;# 
   439  001C                     	;# 
   440  008C                     	;# 
   441  0091                     	;# 
   442  0092                     	;# 
   443  0093                     	;# 
   444  0095                     	;# 
   445  0096                     	;# 
   446  0097                     	;# 
   447  0098                     	;# 
   448  0099                     	;# 
   449  009A                     	;# 
   450  009B                     	;# 
   451  009B                     	;# 
   452  009C                     	;# 
   453  009D                     	;# 
   454  009E                     	;# 
   455  009F                     	;# 
   456  010C                     	;# 
   457  0111                     	;# 
   458  0112                     	;# 
   459  0115                     	;# 
   460  0116                     	;# 
   461  0117                     	;# 
   462  0118                     	;# 
   463  0119                     	;# 
   464  011D                     	;# 
   465  011D                     	;# 
   466  018C                     	;# 
   467  0191                     	;# 
   468  0191                     	;# 
   469  0192                     	;# 
   470  0193                     	;# 
   471  0193                     	;# 
   472  0194                     	;# 
   473  0195                     	;# 
   474  0196                     	;# 
   475  0197                     	;# 
   476  0199                     	;# 
   477  019A                     	;# 
   478  019B                     	;# 
   479  019B                     	;# 
   480  019C                     	;# 
   481  019D                     	;# 
   482  019E                     	;# 
   483  019F                     	;# 
   484  020C                     	;# 
   485  028C                     	;# 
   486  030C                     	;# 
   487  038C                     	;# 
   488  0391                     	;# 
   489  0392                     	;# 
   490  0393                     	;# 
   491  0691                     	;# 
   492  0692                     	;# 
   493  0693                     	;# 
   494  0694                     	;# 
   495  0695                     	;# 
   496  0D8E                     	;# 
   497  0D8F                     	;# 
   498  0D90                     	;# 
   499  0D91                     	;# 
   500  0D91                     	;# 
   501  0D92                     	;# 
   502  0D93                     	;# 
   503  0D93                     	;# 
   504  0D94                     	;# 
   505  0D95                     	;# 
   506  0D95                     	;# 
   507  0D96                     	;# 
   508  0D97                     	;# 
   509  0D97                     	;# 
   510  0D98                     	;# 
   511  0D99                     	;# 
   512  0D99                     	;# 
   513  0D9A                     	;# 
   514  0D9B                     	;# 
   515  0D9C                     	;# 
   516  0D9C                     	;# 
   517  0D9D                     	;# 
   518  0D9D                     	;# 
   519  0D9E                     	;# 
   520  0D9F                     	;# 
   521  0DA0                     	;# 
   522  0DA1                     	;# 
   523  0DA1                     	;# 
   524  0DA2                     	;# 
   525  0DA3                     	;# 
   526  0DA3                     	;# 
   527  0DA4                     	;# 
   528  0DA5                     	;# 
   529  0DA5                     	;# 
   530  0DA6                     	;# 
   531  0DA7                     	;# 
   532  0DA7                     	;# 
   533  0DA8                     	;# 
   534  0DA9                     	;# 
   535  0DA9                     	;# 
   536  0DAA                     	;# 
   537  0DAB                     	;# 
   538  0DAC                     	;# 
   539  0DAC                     	;# 
   540  0DAD                     	;# 
   541  0DAD                     	;# 
   542  0DAE                     	;# 
   543  0DAF                     	;# 
   544  0DB0                     	;# 
   545  0DB1                     	;# 
   546  0DB1                     	;# 
   547  0DB2                     	;# 
   548  0DB3                     	;# 
   549  0DB3                     	;# 
   550  0DB4                     	;# 
   551  0DB5                     	;# 
   552  0DB5                     	;# 
   553  0DB6                     	;# 
   554  0DB7                     	;# 
   555  0DB7                     	;# 
   556  0DB8                     	;# 
   557  0DB9                     	;# 
   558  0DB9                     	;# 
   559  0DBA                     	;# 
   560  0DBB                     	;# 
   561  0DBC                     	;# 
   562  0DBC                     	;# 
   563  0DBD                     	;# 
   564  0DBD                     	;# 
   565  0DBE                     	;# 
   566  0DBF                     	;# 
   567  0DC0                     	;# 
   568  0FE4                     	;# 
   569  0FE5                     	;# 
   570  0FE6                     	;# 
   571  0FE7                     	;# 
   572  0FE8                     	;# 
   573  0FE8                     	;# 
   574  0FE9                     	;# 
   575  0FEA                     	;# 
   576  0FEA                     	;# 
   577  0FEB                     	;# 
   578  0FED                     	;# 
   579  0FEE                     	;# 
   580  0FEE                     	;# 
   581  0FEF                     	;# 
   582  0000                     	;# 
   583  0001                     	;# 
   584  0002                     	;# 
   585  0003                     	;# 
   586  0004                     	;# 
   587  0005                     	;# 
   588  0006                     	;# 
   589  0007                     	;# 
   590  0008                     	;# 
   591  0009                     	;# 
   592  000A                     	;# 
   593  000B                     	;# 
   594  000C                     	;# 
   595  0011                     	;# 
   596  0012                     	;# 
   597  0013                     	;# 
   598  0015                     	;# 
   599  0016                     	;# 
   600  0016                     	;# 
   601  0017                     	;# 
   602  0018                     	;# 
   603  0019                     	;# 
   604  001A                     	;# 
   605  001B                     	;# 
   606  001C                     	;# 
   607  008C                     	;# 
   608  0091                     	;# 
   609  0092                     	;# 
   610  0093                     	;# 
   611  0095                     	;# 
   612  0096                     	;# 
   613  0097                     	;# 
   614  0098                     	;# 
   615  0099                     	;# 
   616  009A                     	;# 
   617  009B                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  009F                     	;# 
   623  010C                     	;# 
   624  0111                     	;# 
   625  0112                     	;# 
   626  0115                     	;# 
   627  0116                     	;# 
   628  0117                     	;# 
   629  0118                     	;# 
   630  0119                     	;# 
   631  011D                     	;# 
   632  011D                     	;# 
   633  018C                     	;# 
   634  0191                     	;# 
   635  0191                     	;# 
   636  0192                     	;# 
   637  0193                     	;# 
   638  0193                     	;# 
   639  0194                     	;# 
   640  0195                     	;# 
   641  0196                     	;# 
   642  0197                     	;# 
   643  0199                     	;# 
   644  019A                     	;# 
   645  019B                     	;# 
   646  019B                     	;# 
   647  019C                     	;# 
   648  019D                     	;# 
   649  019E                     	;# 
   650  019F                     	;# 
   651  020C                     	;# 
   652  028C                     	;# 
   653  030C                     	;# 
   654  038C                     	;# 
   655  0391                     	;# 
   656  0392                     	;# 
   657  0393                     	;# 
   658  0691                     	;# 
   659  0692                     	;# 
   660  0693                     	;# 
   661  0694                     	;# 
   662  0695                     	;# 
   663  0D8E                     	;# 
   664  0D8F                     	;# 
   665  0D90                     	;# 
   666  0D91                     	;# 
   667  0D91                     	;# 
   668  0D92                     	;# 
   669  0D93                     	;# 
   670  0D93                     	;# 
   671  0D94                     	;# 
   672  0D95                     	;# 
   673  0D95                     	;# 
   674  0D96                     	;# 
   675  0D97                     	;# 
   676  0D97                     	;# 
   677  0D98                     	;# 
   678  0D99                     	;# 
   679  0D99                     	;# 
   680  0D9A                     	;# 
   681  0D9B                     	;# 
   682  0D9C                     	;# 
   683  0D9C                     	;# 
   684  0D9D                     	;# 
   685  0D9D                     	;# 
   686  0D9E                     	;# 
   687  0D9F                     	;# 
   688  0DA0                     	;# 
   689  0DA1                     	;# 
   690  0DA1                     	;# 
   691  0DA2                     	;# 
   692  0DA3                     	;# 
   693  0DA3                     	;# 
   694  0DA4                     	;# 
   695  0DA5                     	;# 
   696  0DA5                     	;# 
   697  0DA6                     	;# 
   698  0DA7                     	;# 
   699  0DA7                     	;# 
   700  0DA8                     	;# 
   701  0DA9                     	;# 
   702  0DA9                     	;# 
   703  0DAA                     	;# 
   704  0DAB                     	;# 
   705  0DAC                     	;# 
   706  0DAC                     	;# 
   707  0DAD                     	;# 
   708  0DAD                     	;# 
   709  0DAE                     	;# 
   710  0DAF                     	;# 
   711  0DB0                     	;# 
   712  0DB1                     	;# 
   713  0DB1                     	;# 
   714  0DB2                     	;# 
   715  0DB3                     	;# 
   716  0DB3                     	;# 
   717  0DB4                     	;# 
   718  0DB5                     	;# 
   719  0DB5                     	;# 
   720  0DB6                     	;# 
   721  0DB7                     	;# 
   722  0DB7                     	;# 
   723  0DB8                     	;# 
   724  0DB9                     	;# 
   725  0DB9                     	;# 
   726  0DBA                     	;# 
   727  0DBB                     	;# 
   728  0DBC                     	;# 
   729  0DBC                     	;# 
   730  0DBD                     	;# 
   731  0DBD                     	;# 
   732  0DBE                     	;# 
   733  0DBF                     	;# 
   734  0DC0                     	;# 
   735  0FE4                     	;# 
   736  0FE5                     	;# 
   737  0FE6                     	;# 
   738  0FE7                     	;# 
   739  0FE8                     	;# 
   740  0FE8                     	;# 
   741  0FE9                     	;# 
   742  0FEA                     	;# 
   743  0FEA                     	;# 
   744  0FEB                     	;# 
   745  0FED                     	;# 
   746  0FEE                     	;# 
   747  0FEE                     	;# 
   748  0FEF                     	;# 
   749  0000                     	;# 
   750  0001                     	;# 
   751  0002                     	;# 
   752  0003                     	;# 
   753  0004                     	;# 
   754  0005                     	;# 
   755  0006                     	;# 
   756  0007                     	;# 
   757  0008                     	;# 
   758  0009                     	;# 
   759  000A                     	;# 
   760  000B                     	;# 
   761  000C                     	;# 
   762  0011                     	;# 
   763  0012                     	;# 
   764  0013                     	;# 
   765  0015                     	;# 
   766  0016                     	;# 
   767  0016                     	;# 
   768  0017                     	;# 
   769  0018                     	;# 
   770  0019                     	;# 
   771  001A                     	;# 
   772  001B                     	;# 
   773  001C                     	;# 
   774  008C                     	;# 
   775  0091                     	;# 
   776  0092                     	;# 
   777  0093                     	;# 
   778  0095                     	;# 
   779  0096                     	;# 
   780  0097                     	;# 
   781  0098                     	;# 
   782  0099                     	;# 
   783  009A                     	;# 
   784  009B                     	;# 
   785  009B                     	;# 
   786  009C                     	;# 
   787  009D                     	;# 
   788  009E                     	;# 
   789  009F                     	;# 
   790  010C                     	;# 
   791  0111                     	;# 
   792  0112                     	;# 
   793  0115                     	;# 
   794  0116                     	;# 
   795  0117                     	;# 
   796  0118                     	;# 
   797  0119                     	;# 
   798  011D                     	;# 
   799  011D                     	;# 
   800  018C                     	;# 
   801  0191                     	;# 
   802  0191                     	;# 
   803  0192                     	;# 
   804  0193                     	;# 
   805  0193                     	;# 
   806  0194                     	;# 
   807  0195                     	;# 
   808  0196                     	;# 
   809  0197                     	;# 
   810  0199                     	;# 
   811  019A                     	;# 
   812  019B                     	;# 
   813  019B                     	;# 
   814  019C                     	;# 
   815  019D                     	;# 
   816  019E                     	;# 
   817  019F                     	;# 
   818  020C                     	;# 
   819  028C                     	;# 
   820  030C                     	;# 
   821  038C                     	;# 
   822  0391                     	;# 
   823  0392                     	;# 
   824  0393                     	;# 
   825  0691                     	;# 
   826  0692                     	;# 
   827  0693                     	;# 
   828  0694                     	;# 
   829  0695                     	;# 
   830  0D8E                     	;# 
   831  0D8F                     	;# 
   832  0D90                     	;# 
   833  0D91                     	;# 
   834  0D91                     	;# 
   835  0D92                     	;# 
   836  0D93                     	;# 
   837  0D93                     	;# 
   838  0D94                     	;# 
   839  0D95                     	;# 
   840  0D95                     	;# 
   841  0D96                     	;# 
   842  0D97                     	;# 
   843  0D97                     	;# 
   844  0D98                     	;# 
   845  0D99                     	;# 
   846  0D99                     	;# 
   847  0D9A                     	;# 
   848  0D9B                     	;# 
   849  0D9C                     	;# 
   850  0D9C                     	;# 
   851  0D9D                     	;# 
   852  0D9D                     	;# 
   853  0D9E                     	;# 
   854  0D9F                     	;# 
   855  0DA0                     	;# 
   856  0DA1                     	;# 
   857  0DA1                     	;# 
   858  0DA2                     	;# 
   859  0DA3                     	;# 
   860  0DA3                     	;# 
   861  0DA4                     	;# 
   862  0DA5                     	;# 
   863  0DA5                     	;# 
   864  0DA6                     	;# 
   865  0DA7                     	;# 
   866  0DA7                     	;# 
   867  0DA8                     	;# 
   868  0DA9                     	;# 
   869  0DA9                     	;# 
   870  0DAA                     	;# 
   871  0DAB                     	;# 
   872  0DAC                     	;# 
   873  0DAC                     	;# 
   874  0DAD                     	;# 
   875  0DAD                     	;# 
   876  0DAE                     	;# 
   877  0DAF                     	;# 
   878  0DB0                     	;# 
   879  0DB1                     	;# 
   880  0DB1                     	;# 
   881  0DB2                     	;# 
   882  0DB3                     	;# 
   883  0DB3                     	;# 
   884  0DB4                     	;# 
   885  0DB5                     	;# 
   886  0DB5                     	;# 
   887  0DB6                     	;# 
   888  0DB7                     	;# 
   889  0DB7                     	;# 
   890  0DB8                     	;# 
   891  0DB9                     	;# 
   892  0DB9                     	;# 
   893  0DBA                     	;# 
   894  0DBB                     	;# 
   895  0DBC                     	;# 
   896  0DBC                     	;# 
   897  0DBD                     	;# 
   898  0DBD                     	;# 
   899  0DBE                     	;# 
   900  0DBF                     	;# 
   901  0DC0                     	;# 
   902  0FE4                     	;# 
   903  0FE5                     	;# 
   904  0FE6                     	;# 
   905  0FE7                     	;# 
   906  0FE8                     	;# 
   907  0FE8                     	;# 
   908  0FE9                     	;# 
   909  0FEA                     	;# 
   910  0FEA                     	;# 
   911  0FEB                     	;# 
   912  0FED                     	;# 
   913  0FEE                     	;# 
   914  0FEE                     	;# 
   915  0FEF                     	;# 
   916  0000                     	;# 
   917  0001                     	;# 
   918  0002                     	;# 
   919  0003                     	;# 
   920  0004                     	;# 
   921  0005                     	;# 
   922  0006                     	;# 
   923  0007                     	;# 
   924  0008                     	;# 
   925  0009                     	;# 
   926  000A                     	;# 
   927  000B                     	;# 
   928  000C                     	;# 
   929  0011                     	;# 
   930  0012                     	;# 
   931  0013                     	;# 
   932  0015                     	;# 
   933  0016                     	;# 
   934  0016                     	;# 
   935  0017                     	;# 
   936  0018                     	;# 
   937  0019                     	;# 
   938  001A                     	;# 
   939  001B                     	;# 
   940  001C                     	;# 
   941  008C                     	;# 
   942  0091                     	;# 
   943  0092                     	;# 
   944  0093                     	;# 
   945  0095                     	;# 
   946  0096                     	;# 
   947  0097                     	;# 
   948  0098                     	;# 
   949  0099                     	;# 
   950  009A                     	;# 
   951  009B                     	;# 
   952  009B                     	;# 
   953  009C                     	;# 
   954  009D                     	;# 
   955  009E                     	;# 
   956  009F                     	;# 
   957  010C                     	;# 
   958  0111                     	;# 
   959  0112                     	;# 
   960  0115                     	;# 
   961  0116                     	;# 
   962  0117                     	;# 
   963  0118                     	;# 
   964  0119                     	;# 
   965  011D                     	;# 
   966  011D                     	;# 
   967  018C                     	;# 
   968  0191                     	;# 
   969  0191                     	;# 
   970  0192                     	;# 
   971  0193                     	;# 
   972  0193                     	;# 
   973  0194                     	;# 
   974  0195                     	;# 
   975  0196                     	;# 
   976  0197                     	;# 
   977  0199                     	;# 
   978  019A                     	;# 
   979  019B                     	;# 
   980  019B                     	;# 
   981  019C                     	;# 
   982  019D                     	;# 
   983  019E                     	;# 
   984  019F                     	;# 
   985  020C                     	;# 
   986  028C                     	;# 
   987  030C                     	;# 
   988  038C                     	;# 
   989  0391                     	;# 
   990  0392                     	;# 
   991  0393                     	;# 
   992  0691                     	;# 
   993  0692                     	;# 
   994  0693                     	;# 
   995  0694                     	;# 
   996  0695                     	;# 
   997  0D8E                     	;# 
   998  0D8F                     	;# 
   999  0D90                     	;# 
  1000  0D91                     	;# 
  1001  0D91                     	;# 
  1002  0D92                     	;# 
  1003  0D93                     	;# 
  1004  0D93                     	;# 
  1005  0D94                     	;# 
  1006  0D95                     	;# 
  1007  0D95                     	;# 
  1008  0D96                     	;# 
  1009  0D97                     	;# 
  1010  0D97                     	;# 
  1011  0D98                     	;# 
  1012  0D99                     	;# 
  1013  0D99                     	;# 
  1014  0D9A                     	;# 
  1015  0D9B                     	;# 
  1016  0D9C                     	;# 
  1017  0D9C                     	;# 
  1018  0D9D                     	;# 
  1019  0D9D                     	;# 
  1020  0D9E                     	;# 
  1021  0D9F                     	;# 
  1022  0DA0                     	;# 
  1023  0DA1                     	;# 
  1024  0DA1                     	;# 
  1025  0DA2                     	;# 
  1026  0DA3                     	;# 
  1027  0DA3                     	;# 
  1028  0DA4                     	;# 
  1029  0DA5                     	;# 
  1030  0DA5                     	;# 
  1031  0DA6                     	;# 
  1032  0DA7                     	;# 
  1033  0DA7                     	;# 
  1034  0DA8                     	;# 
  1035  0DA9                     	;# 
  1036  0DA9                     	;# 
  1037  0DAA                     	;# 
  1038  0DAB                     	;# 
  1039  0DAC                     	;# 
  1040  0DAC                     	;# 
  1041  0DAD                     	;# 
  1042  0DAD                     	;# 
  1043  0DAE                     	;# 
  1044  0DAF                     	;# 
  1045  0DB0                     	;# 
  1046  0DB1                     	;# 
  1047  0DB1                     	;# 
  1048  0DB2                     	;# 
  1049  0DB3                     	;# 
  1050  0DB3                     	;# 
  1051  0DB4                     	;# 
  1052  0DB5                     	;# 
  1053  0DB5                     	;# 
  1054  0DB6                     	;# 
  1055  0DB7                     	;# 
  1056  0DB7                     	;# 
  1057  0DB8                     	;# 
  1058  0DB9                     	;# 
  1059  0DB9                     	;# 
  1060  0DBA                     	;# 
  1061  0DBB                     	;# 
  1062  0DBC                     	;# 
  1063  0DBC                     	;# 
  1064  0DBD                     	;# 
  1065  0DBD                     	;# 
  1066  0DBE                     	;# 
  1067  0DBF                     	;# 
  1068  0DC0                     	;# 
  1069  0FE4                     	;# 
  1070  0FE5                     	;# 
  1071  0FE6                     	;# 
  1072  0FE7                     	;# 
  1073  0FE8                     	;# 
  1074  0FE8                     	;# 
  1075  0FE9                     	;# 
  1076  0FEA                     	;# 
  1077  0FEA                     	;# 
  1078  0FEB                     	;# 
  1079  0FED                     	;# 
  1080  0FEE                     	;# 
  1081  0FEE                     	;# 
  1082  0FEF                     	;# 
  1083                           
  1084                           	psect	nvBANK0
  1085  002E                     __pnvBANK0:	
  1086  002E                     _WakeTimer:	
  1087  002E                     	ds	4
  1088  0032                     _TMR0_InterruptHandler:	
  1089  0032                     	ds	2
  1090  0034                     _timer0ReloadVal:	
  1091  0034                     	ds	1
  1092  000C                     _PORTAbits	set	12
  1093  0015                     _TMR0	set	21
  1094  000B                     _INTCONbits	set	11
  1095  0095                     _OPTION_REG	set	149
  1096  0097                     _WDTCON	set	151
  1097  0098                     _OSCTUNE	set	152
  1098  0099                     _OSCCON	set	153
  1099  0095                     _OPTION_REGbits	set	149
  1100  008C                     _TRISA	set	140
  1101  010C                     _LATAbits	set	268
  1102  0116                     _BORCON	set	278
  1103  011D                     _APFCON	set	285
  1104  010C                     _LATA	set	268
  1105  0197                     _VREGCONbits	set	407
  1106  018C                     _ANSELA	set	396
  1107  020C                     _WPUA	set	524
  1108  028C                     _ODCONA	set	652
  1109  0391                     _IOCAPbits	set	913
  1110  0392                     _IOCANbits	set	914
  1111  0393                     _IOCAFbits	set	915
  1112  0DBF                     _PWM3LDCONbits	set	3519
  1113  0DBB                     _PWM3CONbits	set	3515
  1114  0DBB                     _PWM3CON	set	3515
  1115  0DB9                     _PWM3TMRL	set	3513
  1116  0DBA                     _PWM3TMRH	set	3514
  1117  0DB7                     _PWM3OFL	set	3511
  1118  0DB8                     _PWM3OFH	set	3512
  1119  0DB5                     _PWM3PRL	set	3509
  1120  0DB6                     _PWM3PRH	set	3510
  1121  0DB3                     _PWM3DCL	set	3507
  1122  0DB4                     _PWM3DCH	set	3508
  1123  0DB1                     _PWM3PHL	set	3505
  1124  0DB2                     _PWM3PHH	set	3506
  1125  0DC0                     _PWM3OFCON	set	3520
  1126  0DBF                     _PWM3LDCON	set	3519
  1127  0DBE                     _PWM3CLKCON	set	3518
  1128  0DBD                     _PWM3INTF	set	3517
  1129  0DBC                     _PWM3INTE	set	3516
  1130                           
  1131                           ; #config settings
  1132  0000                     
  1133                           	psect	cinit
  1134  0012                     start_initialization:	
  1135  0012                     __initialization:	
  1136                           
  1137                           ; Clear objects allocated to COMMON
  1138  0012  3070               	movlw	low __pbssCOMMON
  1139  0013  0084               	movwf	4
  1140  0014  3000               	movlw	high __pbssCOMMON
  1141  0015  0085               	movwf	5
  1142  0016  300A               	movlw	10
  1143  0017  21A6               	fcall	clear_ram0
  1144                           
  1145                           ; Clear objects allocated to BANK0
  1146  0018  3020               	movlw	low __pbssBANK0
  1147  0019  0084               	movwf	4
  1148  001A  3000               	movlw	high __pbssBANK0
  1149  001B  0085               	movwf	5
  1150  001C  300E               	movlw	14
  1151  001D  21A6               	fcall	clear_ram0
  1152  001E                     end_of_initialization:	
  1153                           ;End of C runtime variable initialization code
  1154                           
  1155  001E                     __end_of__initialization:	
  1156  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1157  001F  0020               	movlb	0
  1158  0020  2821               	ljmp	_main	;jump to C main() function
  1159                           
  1160                           	psect	bssCOMMON
  1161  0070                     __pbssCOMMON:	
  1162  0070                     _TempDelayTimer:	
  1163  0070                     	ds	4
  1164  0074                     _SpeedButtonState:	
  1165  0074                     	ds	1
  1166  0075                     _StartButtonState:	
  1167  0075                     	ds	1
  1168  0076                     _SpeedDebounceTimer:	
  1169  0076                     	ds	1
  1170  0077                     _StartDebounceTimer:	
  1171  0077                     	ds	1
  1172  0078                     _ShutdownDelayTimer:	
  1173  0078                     	ds	1
  1174  0079                     _SpeedLEDState:	
  1175  0079                     	ds	1
  1176                           
  1177                           	psect	bssBANK0
  1178  0020                     __pbssBANK0:	
  1179  0020                     _SpeedLeftButtonPressTime:	
  1180  0020                     	ds	4
  1181  0024                     _StartRightButtonPressTime:	
  1182  0024                     	ds	4
  1183  0028                     _IOCAF3_InterruptHandler:	
  1184  0028                     	ds	2
  1185  002A                     _IOCAF2_InterruptHandler:	
  1186  002A                     	ds	2
  1187  002C                     TMR0_Callback@cntr:	
  1188  002C                     	ds	1
  1189  002D                     _MotorState:	
  1190  002D                     	ds	1
  1191                           
  1192                           	psect	clrtext
  1193  01A6                     clear_ram0:	
  1194                           ;	Called with FSR0 containing the base address, and
  1195                           ;	WREG with the size to clear
  1196                           
  1197  01A6  0064               	clrwdt	;clear the watchdog before getting into this loop
  1198  01A7                     clrloop0:	
  1199  01A7  0180               	clrf	0	;clear RAM location pointed to by FSR
  1200  01A8  3101               	addfsr 0,1
  1201  01A9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1202  01AA  29A7               	goto	clrloop0	;have we reached the end yet?
  1203  01AB  3400               	retlw	0	;all done for this memory range, return
  1204                           
  1205                           	psect	cstackCOMMON
  1206  007A                     __pcstackCOMMON:	
  1207  007A                     ?_IOCAF3_ISR:	
  1208  007A                     ??_IOCAF3_ISR:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211  007A                     ?_OSCILLATOR_Initialize:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214  007A                     ??_OSCILLATOR_Initialize:	
  1215                           ; 1 bytes @ 0x0
  1216                           
  1217  007A                     ?_WDT_Initialize:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220  007A                     ??_WDT_Initialize:	
  1221                           ; 1 bytes @ 0x0
  1222                           
  1223  007A                     ?_PWM3_Initialize:	
  1224                           ; 1 bytes @ 0x0
  1225                           
  1226  007A                     ??_PWM3_Initialize:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  007A                     ?_TMR0_Initialize:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232  007A                     ??_TMR0_Initialize:	
  1233                           ; 1 bytes @ 0x0
  1234                           
  1235  007A                     ?_TMR0_ISR:	
  1236                           ; 1 bytes @ 0x0
  1237                           
  1238  007A                     ??_TMR0_ISR:	
  1239                           ; 1 bytes @ 0x0
  1240                           
  1241  007A                     ?_TMR0_CallBack:	
  1242                           ; 1 bytes @ 0x0
  1243                           
  1244  007A                     ??_TMR0_CallBack:	
  1245                           ; 1 bytes @ 0x0
  1246                           
  1247  007A                     ?_PWM3_DutyCycleSet:	
  1248                           ; 1 bytes @ 0x0
  1249                           
  1250  007A                     ?_PWM3_LoadBufferSet:	
  1251                           ; 1 bytes @ 0x0
  1252                           
  1253  007A                     ??_PWM3_LoadBufferSet:	
  1254                           ; 1 bytes @ 0x0
  1255                           
  1256  007A                     ?_PWM3_Start:	
  1257                           ; 1 bytes @ 0x0
  1258                           
  1259  007A                     ??_PWM3_Start:	
  1260                           ; 1 bytes @ 0x0
  1261                           
  1262  007A                     ?_PWM3_Stop:	
  1263                           ; 1 bytes @ 0x0
  1264                           
  1265  007A                     ??_PWM3_Stop:	
  1266                           ; 1 bytes @ 0x0
  1267                           
  1268  007A                     ?_PIN_MANAGER_Initialize:	
  1269                           ; 1 bytes @ 0x0
  1270                           
  1271  007A                     ??_PIN_MANAGER_Initialize:	
  1272                           ; 1 bytes @ 0x0
  1273                           
  1274  007A                     ?_IOCAF2_ISR:	
  1275                           ; 1 bytes @ 0x0
  1276                           
  1277  007A                     ??_IOCAF2_ISR:	
  1278                           ; 1 bytes @ 0x0
  1279                           
  1280  007A                     ?_PIN_MANAGER_IOC:	
  1281                           ; 1 bytes @ 0x0
  1282                           
  1283  007A                     ??_PIN_MANAGER_IOC:	
  1284                           ; 1 bytes @ 0x0
  1285                           
  1286  007A                     ?_SYSTEM_Initialize:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289  007A                     ??_SYSTEM_Initialize:	
  1290                           ; 1 bytes @ 0x0
  1291                           
  1292  007A                     ?_INTERRUPT_InterruptManager:	
  1293                           ; 1 bytes @ 0x0
  1294                           
  1295  007A                     ??_INTERRUPT_InterruptManager:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298  007A                     ?_TMR0_SetInterruptHandler:	
  1299                           ; 1 bytes @ 0x0
  1300                           
  1301  007A                     ?_TMR0_Callback:	
  1302                           ; 1 bytes @ 0x0
  1303                           
  1304  007A                     ??_TMR0_Callback:	
  1305                           ; 1 bytes @ 0x0
  1306                           
  1307  007A                     ?_LOW_LED_OFF:	
  1308                           ; 1 bytes @ 0x0
  1309                           
  1310  007A                     ??_LOW_LED_OFF:	
  1311                           ; 1 bytes @ 0x0
  1312                           
  1313  007A                     ?_MEDIUM_LED_OFF:	
  1314                           ; 1 bytes @ 0x0
  1315                           
  1316  007A                     ??_MEDIUM_LED_OFF:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319  007A                     ?_HIGH_LED_OFF:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  007A                     ??_HIGH_LED_OFF:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325  007A                     ?_LOW_LED_ON:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328  007A                     ??_LOW_LED_ON:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331  007A                     ?_MEDIUM_LED_ON:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334  007A                     ??_MEDIUM_LED_ON:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  007A                     ?_HIGH_LED_ON:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340  007A                     ??_HIGH_LED_ON:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343  007A                     ?_SetAllLEDsOff:	
  1344                           ; 1 bytes @ 0x0
  1345                           
  1346  007A                     ??_SetAllLEDsOff:	
  1347                           ; 1 bytes @ 0x0
  1348                           
  1349  007A                     ?_UpdateLEDs:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352  007A                     ?_StartButtonPressedRaw:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355  007A                     ??_StartButtonPressedRaw:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358  007A                     ?_SpeedButtonPressedRaw:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361  007A                     ??_SpeedButtonPressedRaw:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364  007A                     ?_SpeedButtonJustGotPressed:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367  007A                     ?_SpeedButtonJustGotReleased:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370  007A                     ??_SpeedButtonJustGotReleased:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373  007A                     ?_StartButtonJustGotPressed:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376  007A                     ??_StartButtonJustGotPressed:	
  1377                           ; 1 bytes @ 0x0
  1378                           
  1379  007A                     ?_StartButtonJustGotReleased:	
  1380                           ; 1 bytes @ 0x0
  1381                           
  1382  007A                     ??_StartButtonJustGotReleased:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385  007A                     ?_CheckForButtonPushes:	
  1386                           ; 1 bytes @ 0x0
  1387                           
  1388  007A                     ?_main:	
  1389                           ; 1 bytes @ 0x0
  1390                           
  1391  007A                     TMR0_SetInterruptHandler@InterruptHandler:	
  1392                           ; 1 bytes @ 0x0
  1393                           
  1394  007A                     PWM3_DutyCycleSet@dutyCycleCount:	
  1395                           ; 2 bytes @ 0x0
  1396                           
  1397                           
  1398                           ; 2 bytes @ 0x0
  1399  007A                     	ds	2
  1400  007C                     ??_PWM3_DutyCycleSet:	
  1401  007C                     ??_TMR0_SetInterruptHandler:	
  1402                           ; 1 bytes @ 0x2
  1403                           
  1404  007C                     ??_UpdateLEDs:	
  1405                           ; 1 bytes @ 0x2
  1406                           
  1407  007C                     ??_SpeedButtonJustGotPressed:	
  1408                           ; 1 bytes @ 0x2
  1409                           
  1410  007C                     ??_CheckForButtonPushes:	
  1411                           ; 1 bytes @ 0x2
  1412                           
  1413  007C                     _CheckForButtonPushes$463:	
  1414                           ; 1 bytes @ 0x2
  1415                           
  1416                           
  1417                           ; 1 bytes @ 0x2
  1418  007C                     	ds	1
  1419  007D                     ??_main:	
  1420                           
  1421                           ; 1 bytes @ 0x3
  1422  007D                     	ds	1
  1423                           
  1424                           	psect	maintext
  1425  0021                     __pmaintext:	
  1426 ;;
  1427 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1428 ;;
  1429 ;; *************** function _main *****************
  1430 ;; Defined at:
  1431 ;;		line 352 in file "main.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  i               1    0        unsigned char 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : B1F/0
  1442 ;;		On exit  : 1F/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1445 ;;      Params:         0       0       0       0
  1446 ;;      Locals:         0       0       0       0
  1447 ;;      Temps:          1       0       0       0
  1448 ;;      Totals:         1       0       0       0
  1449 ;;Total ram usage:        1 bytes
  1450 ;; Hardware stack levels required when called:    8
  1451 ;; This function calls:
  1452 ;;		_CheckForButtonPushes
  1453 ;;		_HIGH_LED_OFF
  1454 ;;		_HIGH_LED_ON
  1455 ;;		_LOW_LED_OFF
  1456 ;;		_LOW_LED_ON
  1457 ;;		_MEDIUM_LED_OFF
  1458 ;;		_MEDIUM_LED_ON
  1459 ;;		_PWM3_Stop
  1460 ;;		_SYSTEM_Initialize
  1461 ;;		_SetAllLEDsOff
  1462 ;;		_TMR0_SetInterruptHandler
  1463 ;;		_UpdateLEDs
  1464 ;; This function is called by:
  1465 ;;		Startup code after reset
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           
  1470                           ;psect for function _main
  1471  0021                     _main:	
  1472                           
  1473                           ;main.c: 355: SYSTEM_Initialize();
  1474                           
  1475                           ;incstack = 0
  1476                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1477  0021  21BD               	fcall	_SYSTEM_Initialize
  1478                           
  1479                           ;main.c: 357: TMR0_SetInterruptHandler(TMR0_Callback);
  1480  0022  3006               	movlw	low _TMR0_Callback
  1481  0023  00FA               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1482  0024  3001               	movlw	high _TMR0_Callback
  1483  0025  00FB               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1484  0026  21B8               	fcall	_TMR0_SetInterruptHandler
  1485                           
  1486                           ;main.c: 363: (INTCONbits.GIE = 1);
  1487  0027  178B               	bsf	11,7	;volatile
  1488                           
  1489                           ;main.c: 366: (INTCONbits.PEIE = 1);
  1490  0028  170B               	bsf	11,6	;volatile
  1491                           
  1492                           ;main.c: 374: uint8_t i;;main.c: 376: TRISA = 0xD8;
  1493  0029  30D8               	movlw	216
  1494  002A  0021               	movlb	1	; select bank1
  1495  002B  008C               	movwf	12	;volatile
  1496                           
  1497                           ;main.c: 377: LATA = 0x00;
  1498  002C  0022               	movlb	2	; select bank2
  1499  002D  018C               	clrf	12	;volatile
  1500                           
  1501                           ;main.c: 380: WakeTimer = (30UL * 1000UL) + 1;
  1502  002E  0020               	movlb	0	; select bank0
  1503  002F  01B1               	clrf	_WakeTimer+3	;volatile
  1504  0030  01B0               	clrf	_WakeTimer+2	;volatile
  1505  0031  3075               	movlw	117
  1506  0032  00AF               	movwf	_WakeTimer+1	;volatile
  1507  0033  3031               	movlw	49
  1508  0034  00AE               	movwf	_WakeTimer	;volatile
  1509  0035                     l1435:	
  1510                           
  1511                           ;main.c: 383: {;main.c: 384: if (WakeTimer > (30UL * 1000UL))
  1512  0035  0831               	movf	_WakeTimer+3,w	;volatile
  1513  0036  1D03               	btfss	3,2
  1514  0037  2841               	goto	l1437
  1515  0038  0830               	movf	_WakeTimer+2,w	;volatile
  1516  0039  1D03               	btfss	3,2
  1517  003A  2841               	goto	l1437
  1518  003B  3031               	movlw	49
  1519  003C  022E               	subwf	_WakeTimer,w	;volatile
  1520  003D  3075               	movlw	117
  1521  003E  3B2F               	subwfb	_WakeTimer+1,w	;volatile
  1522  003F  1C03               	btfss	3,0
  1523  0040  287E               	goto	l270
  1524  0041                     l1437:	
  1525                           
  1526                           ;main.c: 385: {;main.c: 386: SetAllLEDsOff();
  1527  0041  21CB               	fcall	_SetAllLEDsOff
  1528                           
  1529                           ;main.c: 387: PWM3_Stop();
  1530  0042  21CE               	fcall	_PWM3_Stop
  1531                           
  1532                           ;main.c: 390: _delay((unsigned long)((5)*(16000000/4000.0)));
  1533  0043  301A               	movlw	26
  1534  0044  00FD               	movwf	??_main
  1535  0045  30F8               	movlw	248
  1536  0046                     u757:	
  1537  0046  0B89               	decfsz	9,f
  1538  0047  2846               	goto	u757
  1539  0048  0BFD               	decfsz	??_main,f
  1540  0049  2846               	goto	u757
  1541  004A  3200               	nop2
  1542                           
  1543                           ;main.c: 392: ShutdownDelayTimer = 100;
  1544  004B  3064               	movlw	100
  1545  004C  00F8               	movwf	_ShutdownDelayTimer	;volatile
  1546  004D  2852               	goto	l1443
  1547  004E                     l1445:	
  1548  004E  208B               	fcall	_CheckForButtonPushes
  1549  004F  3A00               	xorlw	0
  1550  0050  1D03               	btfss	3,2
  1551  0051  2855               	goto	l1447
  1552  0052                     l1443:	
  1553                           ;main.c: 394: while (ShutdownDelayTimer && !CheckForButtonPushes())
  1554                           
  1555  0052  0878               	movf	_ShutdownDelayTimer,w	;volatile
  1556  0053  1D03               	btfss	3,2
  1557  0054  284E               	goto	l1445
  1558  0055                     l1447:	
  1559                           
  1560                           ;main.c: 396: };main.c: 398: if (ShutdownDelayTimer == 0)
  1561  0055  0878               	movf	_ShutdownDelayTimer,w	;volatile
  1562  0056  1D03               	btfss	3,2
  1563  0057  287E               	goto	l270
  1564                           
  1565                           ;main.c: 399: {;main.c: 401: VREGCONbits.VREGPM = 1;
  1566  0058  0023               	movlb	3	; select bank3
  1567  0059  1497               	bsf	23,1	;volatile
  1568  005A  0063               	sleep	;# 
  1569                           
  1570                           ;main.c: 406: WakeTimer = 0;
  1571  005B  0020               	movlb	0	; select bank0
  1572  005C  01AE               	clrf	_WakeTimer	;volatile
  1573  005D  01AF               	clrf	_WakeTimer+1	;volatile
  1574  005E  01B0               	clrf	_WakeTimer+2	;volatile
  1575  005F  01B1               	clrf	_WakeTimer+3	;volatile
  1576                           
  1577                           ;main.c: 407: SpeedLEDState = 0;
  1578  0060  01F9               	clrf	_SpeedLEDState
  1579                           
  1580                           ;main.c: 410: LOW_LED_ON();
  1581  0061  21D7               	fcall	_LOW_LED_ON
  1582                           
  1583                           ;main.c: 411: MEDIUM_LED_ON();
  1584  0062  21DD               	fcall	_MEDIUM_LED_ON
  1585                           
  1586                           ;main.c: 412: HIGH_LED_ON();
  1587  0063  21E1               	fcall	_HIGH_LED_ON
  1588                           
  1589                           ;main.c: 414: TempDelayTimer = 200;
  1590  0064  2080               	fcall	PL4	;call to abstracted procedure
  1591  0065                     l1461:	
  1592                           ;main.c: 415: while(TempDelayTimer);
  1593                           
  1594  0065  2086               	fcall	PL6	;call to abstracted procedure
  1595  0066  1D03               	skipz
  1596  0067  2865               	goto	l1461
  1597                           
  1598                           ;main.c: 417: LOW_LED_OFF();
  1599  0068  21DA               	fcall	_LOW_LED_OFF
  1600                           
  1601                           ;main.c: 418: MEDIUM_LED_OFF();
  1602  0069  21DF               	fcall	_MEDIUM_LED_OFF
  1603                           
  1604                           ;main.c: 419: HIGH_LED_OFF();
  1605  006A  21E3               	fcall	_HIGH_LED_OFF
  1606                           
  1607                           ;main.c: 421: TempDelayTimer = 200;
  1608  006B  2080               	fcall	PL4	;call to abstracted procedure
  1609  006C                     l1467:	
  1610                           ;main.c: 422: while(TempDelayTimer);
  1611                           
  1612  006C  2086               	fcall	PL6	;call to abstracted procedure
  1613  006D  1D03               	skipz
  1614  006E  286C               	goto	l1467
  1615                           
  1616                           ;main.c: 424: LOW_LED_ON();
  1617  006F  21D7               	fcall	_LOW_LED_ON
  1618                           
  1619                           ;main.c: 425: MEDIUM_LED_ON();
  1620  0070  21DD               	fcall	_MEDIUM_LED_ON
  1621                           
  1622                           ;main.c: 426: HIGH_LED_ON();
  1623  0071  21E1               	fcall	_HIGH_LED_ON
  1624                           
  1625                           ;main.c: 428: TempDelayTimer = 200;
  1626  0072  2080               	fcall	PL4	;call to abstracted procedure
  1627  0073                     l1473:	
  1628                           ;main.c: 429: while(TempDelayTimer);
  1629                           
  1630  0073  2086               	fcall	PL6	;call to abstracted procedure
  1631  0074  1D03               	skipz
  1632  0075  2873               	goto	l1473
  1633                           
  1634                           ;main.c: 431: LOW_LED_OFF();
  1635  0076  21DA               	fcall	_LOW_LED_OFF
  1636                           
  1637                           ;main.c: 432: MEDIUM_LED_OFF();
  1638  0077  21DF               	fcall	_MEDIUM_LED_OFF
  1639                           
  1640                           ;main.c: 433: HIGH_LED_OFF();
  1641  0078  21E3               	fcall	_HIGH_LED_OFF
  1642                           
  1643                           ;main.c: 435: TempDelayTimer = 200;
  1644  0079  2080               	fcall	PL4	;call to abstracted procedure
  1645  007A                     l1479:	
  1646                           ;main.c: 436: while(TempDelayTimer);
  1647                           
  1648  007A  2086               	fcall	PL6	;call to abstracted procedure
  1649  007B  1D03               	skipz
  1650  007C  287A               	goto	l1479
  1651                           
  1652                           ;main.c: 438: UpdateLEDs();
  1653  007D  20E4               	fcall	_UpdateLEDs
  1654  007E                     l270:	
  1655                           
  1656                           ;main.c: 439: };main.c: 440: };main.c: 442: CheckForButtonPushes();
  1657  007E  208B               	fcall	_CheckForButtonPushes
  1658  007F  2835               	goto	l1435
  1659  0080                     __end_of_main:	
  1660  0080                     PL4:	
  1661  0080  30C8               	movlw	200
  1662  0081  00F0               	movwf	_TempDelayTimer	;volatile
  1663  0082  01F1               	clrf	_TempDelayTimer+1	;volatile
  1664  0083  01F2               	clrf	_TempDelayTimer+2	;volatile
  1665  0084  01F3               	clrf	_TempDelayTimer+3	;volatile
  1666  0085  0008               	return
  1667  0086                     __end_ofPL4:	
  1668  0086                     PL6:	
  1669  0086  0873               	movf	_TempDelayTimer+3,w	;volatile
  1670  0087  0472               	iorwf	_TempDelayTimer+2,w	;volatile
  1671  0088  0471               	iorwf	_TempDelayTimer+1,w	;volatile
  1672  0089  0470               	iorwf	_TempDelayTimer,w	;volatile
  1673  008A  0008               	return
  1674  008B                     __end_ofPL6:	
  1675                           
  1676                           	psect	text1
  1677  01B8                     __ptext1:	
  1678 ;; *************** function _TMR0_SetInterruptHandler *****************
  1679 ;; Defined at:
  1680 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  1683 ;;		 -> TMR0_Callback(1), 
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;		None
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		wreg
  1690 ;; Tracked objects:
  1691 ;;		On entry : B1F/0
  1692 ;;		On exit  : B1F/0
  1693 ;;		Unchanged: B00/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1695 ;;      Params:         2       0       0       0
  1696 ;;      Locals:         0       0       0       0
  1697 ;;      Temps:          0       0       0       0
  1698 ;;      Totals:         2       0       0       0
  1699 ;;Total ram usage:        2 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; Hardware stack levels required when called:    4
  1702 ;; This function calls:
  1703 ;;		Nothing
  1704 ;; This function is called by:
  1705 ;;		_main
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           
  1710                           ;psect for function _TMR0_SetInterruptHandler
  1711  01B8                     _TMR0_SetInterruptHandler:	
  1712                           
  1713                           ;tmr0.c: 134: TMR0_InterruptHandler = InterruptHandler;
  1714                           
  1715                           ;incstack = 0
  1716                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  1717  01B8  087B               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  1718  01B9  00B3               	movwf	_TMR0_InterruptHandler+1
  1719  01BA  087A               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  1720  01BB  00B2               	movwf	_TMR0_InterruptHandler
  1721  01BC  0008               	return
  1722  01BD                     __end_of_TMR0_SetInterruptHandler:	
  1723                           
  1724                           	psect	text2
  1725  01CB                     __ptext2:	
  1726 ;; *************** function _SetAllLEDsOff *****************
  1727 ;; Defined at:
  1728 ;;		line 167 in file "main.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		status,2, status,0, pclath, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 1F/0
  1739 ;;		On exit  : 1F/2
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1742 ;;      Params:         0       0       0       0
  1743 ;;      Locals:         0       0       0       0
  1744 ;;      Temps:          0       0       0       0
  1745 ;;      Totals:         0       0       0       0
  1746 ;;Total ram usage:        0 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    5
  1749 ;; This function calls:
  1750 ;;		_HIGH_LED_OFF
  1751 ;;		_LOW_LED_OFF
  1752 ;;		_MEDIUM_LED_OFF
  1753 ;; This function is called by:
  1754 ;;		_main
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           
  1759                           ;psect for function _SetAllLEDsOff
  1760  01CB                     _SetAllLEDsOff:	
  1761                           
  1762                           ;main.c: 169: LOW_LED_OFF();
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _SetAllLEDsOff: [status,2+status,0+pclath+cstack]
  1766  01CB  21DA               	fcall	_LOW_LED_OFF
  1767                           
  1768                           ;main.c: 170: MEDIUM_LED_OFF();
  1769  01CC  21DF               	fcall	_MEDIUM_LED_OFF
  1770                           
  1771                           ;main.c: 171: HIGH_LED_OFF();
  1772  01CD  29E3               	ljmp	l1147
  1773  01CE                     __end_of_SetAllLEDsOff:	
  1774                           
  1775                           	psect	text3
  1776  01BD                     __ptext3:	
  1777 ;; *************** function _SYSTEM_Initialize *****************
  1778 ;; Defined at:
  1779 ;;		line 68 in file "mcc_generated_files/mcc.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;		None
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;		None
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		wreg, status,2, status,0, pclath, cstack
  1788 ;; Tracked objects:
  1789 ;;		On entry : B1F/0
  1790 ;;		On exit  : B1F/0
  1791 ;;		Unchanged: B00/0
  1792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1793 ;;      Params:         0       0       0       0
  1794 ;;      Locals:         0       0       0       0
  1795 ;;      Temps:          0       0       0       0
  1796 ;;      Totals:         0       0       0       0
  1797 ;;Total ram usage:        0 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; Hardware stack levels required when called:    5
  1800 ;; This function calls:
  1801 ;;		_OSCILLATOR_Initialize
  1802 ;;		_PIN_MANAGER_Initialize
  1803 ;;		_PWM3_Initialize
  1804 ;;		_TMR0_Initialize
  1805 ;;		_WDT_Initialize
  1806 ;; This function is called by:
  1807 ;;		_main
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           
  1812                           ;psect for function _SYSTEM_Initialize
  1813  01BD                     _SYSTEM_Initialize:	
  1814                           
  1815                           ;mcc.c: 71: PIN_MANAGER_Initialize();
  1816                           
  1817                           ;incstack = 0
  1818                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1819  01BD  2142               	fcall	_PIN_MANAGER_Initialize
  1820                           
  1821                           ;mcc.c: 72: OSCILLATOR_Initialize();
  1822  01BE  2191               	fcall	_OSCILLATOR_Initialize
  1823                           
  1824                           ;mcc.c: 73: WDT_Initialize();
  1825  01BF  21C7               	fcall	_WDT_Initialize
  1826                           
  1827                           ;mcc.c: 74: PWM3_Initialize();
  1828  01C0  2128               	fcall	_PWM3_Initialize
  1829                           
  1830                           ;mcc.c: 75: TMR0_Initialize();
  1831  01C1  2973               	ljmp	l1279
  1832  01C2                     __end_of_SYSTEM_Initialize:	
  1833                           
  1834                           	psect	text4
  1835  01C7                     __ptext4:	
  1836 ;; *************** function _WDT_Initialize *****************
  1837 ;; Defined at:
  1838 ;;		line 88 in file "mcc_generated_files/mcc.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg
  1847 ;; Tracked objects:
  1848 ;;		On entry : B1F/2
  1849 ;;		On exit  : B1F/1
  1850 ;;		Unchanged: B00/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1852 ;;      Params:         0       0       0       0
  1853 ;;      Locals:         0       0       0       0
  1854 ;;      Temps:          0       0       0       0
  1855 ;;      Totals:         0       0       0       0
  1856 ;;Total ram usage:        0 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    4
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_SYSTEM_Initialize
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           
  1867                           ;psect for function _WDT_Initialize
  1868  01C7                     _WDT_Initialize:	
  1869                           
  1870                           ;mcc.c: 91: WDTCON = 0x16;
  1871                           
  1872                           ;incstack = 0
  1873                           ; Regs used in _WDT_Initialize: [wreg]
  1874  01C7  3016               	movlw	22
  1875  01C8  0021               	movlb	1	; select bank1
  1876  01C9  0097               	movwf	23	;volatile
  1877  01CA  0008               	return
  1878  01CB                     __end_of_WDT_Initialize:	
  1879                           
  1880                           	psect	text5
  1881  0173                     __ptext5:	
  1882 ;; *************** function _TMR0_Initialize *****************
  1883 ;; Defined at:
  1884 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;		None
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;		None
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, status,2
  1893 ;; Tracked objects:
  1894 ;;		On entry : B1F/1B
  1895 ;;		On exit  : B1F/0
  1896 ;;		Unchanged: B00/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1898 ;;      Params:         0       0       0       0
  1899 ;;      Locals:         0       0       0       0
  1900 ;;      Temps:          0       0       0       0
  1901 ;;      Totals:         0       0       0       0
  1902 ;;Total ram usage:        0 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    4
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_SYSTEM_Initialize
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           
  1913                           ;psect for function _TMR0_Initialize
  1914  0173                     _TMR0_Initialize:	
  1915  0173                     l1279:	
  1916                           ;incstack = 0
  1917                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  1918                           
  1919                           
  1920                           ;tmr0.c: 70: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD1 & 0x3F);
  1921  0173  0021               	movlb	1	; select bank1
  1922  0174  0815               	movf	21,w	;volatile
  1923  0175  39C0               	andlw	192
  1924  0176  3811               	iorlw	17
  1925  0177  0095               	movwf	21	;volatile
  1926                           
  1927                           ;tmr0.c: 73: TMR0 = 0x87;
  1928  0178  3087               	movlw	135
  1929  0179  0020               	movlb	0	; select bank0
  1930  017A  0095               	movwf	21	;volatile
  1931                           
  1932                           ;tmr0.c: 76: timer0ReloadVal= 0x87;
  1933  017B  00B4               	movwf	_timer0ReloadVal	;volatile
  1934                           
  1935                           ;tmr0.c: 79: INTCONbits.TMR0IF = 0;
  1936  017C  110B               	bcf	11,2	;volatile
  1937                           
  1938                           ;tmr0.c: 82: INTCONbits.TMR0IE = 1;
  1939  017D  168B               	bsf	11,5	;volatile
  1940  017E  0008               	return
  1941  017F                     __end_of_TMR0_Initialize:	
  1942                           
  1943                           	psect	text6
  1944  0128                     __ptext6:	
  1945 ;; *************** function _PWM3_Initialize *****************
  1946 ;; Defined at:
  1947 ;;		line 57 in file "mcc_generated_files/pwm3.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;		None
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2
  1956 ;; Tracked objects:
  1957 ;;		On entry : B1F/1
  1958 ;;		On exit  : B1F/1B
  1959 ;;		Unchanged: B00/0
  1960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1961 ;;      Params:         0       0       0       0
  1962 ;;      Locals:         0       0       0       0
  1963 ;;      Temps:          0       0       0       0
  1964 ;;      Totals:         0       0       0       0
  1965 ;;Total ram usage:        0 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:    4
  1968 ;; This function calls:
  1969 ;;		Nothing
  1970 ;; This function is called by:
  1971 ;;		_SYSTEM_Initialize
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           
  1976                           ;psect for function _PWM3_Initialize
  1977  0128                     _PWM3_Initialize:	
  1978                           
  1979                           ;pwm3.c: 62: PWM3INTE = 0x00;
  1980                           
  1981                           ;incstack = 0
  1982                           ; Regs used in _PWM3_Initialize: [wreg+status,2]
  1983  0128  003B               	movlb	27	; select bank27
  1984  0129  01BC               	clrf	60	;volatile
  1985                           
  1986                           ;pwm3.c: 65: PWM3INTF = 0x00;
  1987  012A  01BD               	clrf	61	;volatile
  1988                           
  1989                           ;pwm3.c: 68: PWM3CLKCON = 0x70;
  1990  012B  3070               	movlw	112
  1991  012C  00BE               	movwf	62	;volatile
  1992                           
  1993                           ;pwm3.c: 71: PWM3LDCON = 0x00;
  1994  012D  01BF               	clrf	63	;volatile
  1995                           
  1996                           ;pwm3.c: 74: PWM3OFCON = 0x00;
  1997  012E  01C0               	clrf	64	;volatile
  1998                           
  1999                           ;pwm3.c: 77: PWM3PHH = 0x00;
  2000  012F  01B2               	clrf	50	;volatile
  2001                           
  2002                           ;pwm3.c: 80: PWM3PHL = 0x00;
  2003  0130  01B1               	clrf	49	;volatile
  2004                           
  2005                           ;pwm3.c: 83: PWM3DCH = 0x02;
  2006  0131  3002               	movlw	2
  2007  0132  00B4               	movwf	52	;volatile
  2008                           
  2009                           ;pwm3.c: 86: PWM3DCL = 0x71;
  2010  0133  3071               	movlw	113
  2011  0134  00B3               	movwf	51	;volatile
  2012                           
  2013                           ;pwm3.c: 89: PWM3PRH = 0x04;
  2014  0135  3004               	movlw	4
  2015  0136  00B6               	movwf	54	;volatile
  2016                           
  2017                           ;pwm3.c: 92: PWM3PRL = 0xE1;
  2018  0137  30E1               	movlw	225
  2019  0138  00B5               	movwf	53	;volatile
  2020                           
  2021                           ;pwm3.c: 95: PWM3OFH = 0x04;
  2022  0139  3004               	movlw	4
  2023  013A  00B8               	movwf	56	;volatile
  2024                           
  2025                           ;pwm3.c: 98: PWM3OFL = 0xE1;
  2026  013B  30E1               	movlw	225
  2027  013C  00B7               	movwf	55	;volatile
  2028                           
  2029                           ;pwm3.c: 101: PWM3TMRH = 0x00;
  2030  013D  01BA               	clrf	58	;volatile
  2031                           
  2032                           ;pwm3.c: 104: PWM3TMRL = 0x00;
  2033  013E  01B9               	clrf	57	;volatile
  2034                           
  2035                           ;pwm3.c: 107: PWM3CON = 0xC0;
  2036  013F  30C0               	movlw	192
  2037  0140  00BB               	movwf	59	;volatile
  2038  0141  0008               	return
  2039  0142                     __end_of_PWM3_Initialize:	
  2040                           
  2041                           	psect	text7
  2042  0142                     __ptext7:	
  2043 ;; *************** function _PIN_MANAGER_Initialize *****************
  2044 ;; Defined at:
  2045 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;		None
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, status,2
  2054 ;; Tracked objects:
  2055 ;;		On entry : B1F/0
  2056 ;;		On exit  : B1F/7
  2057 ;;		Unchanged: B00/0
  2058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2059 ;;      Params:         0       0       0       0
  2060 ;;      Locals:         0       0       0       0
  2061 ;;      Temps:          0       0       0       0
  2062 ;;      Totals:         0       0       0       0
  2063 ;;Total ram usage:        0 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    4
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_SYSTEM_Initialize
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           
  2074                           ;psect for function _PIN_MANAGER_Initialize
  2075  0142                     _PIN_MANAGER_Initialize:	
  2076                           
  2077                           ;pin_manager.c: 60: LATA = 0x00;
  2078                           
  2079                           ;incstack = 0
  2080                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2081  0142  0022               	movlb	2	; select bank2
  2082  0143  018C               	clrf	12	;volatile
  2083                           
  2084                           ;pin_manager.c: 65: TRISA = 0x3F;
  2085  0144  303F               	movlw	63
  2086  0145  0021               	movlb	1	; select bank1
  2087  0146  008C               	movwf	12	;volatile
  2088                           
  2089                           ;pin_manager.c: 70: ANSELA = 0x00;
  2090  0147  0023               	movlb	3	; select bank3
  2091  0148  018C               	clrf	12	;volatile
  2092                           
  2093                           ;pin_manager.c: 75: WPUA = 0x18;
  2094  0149  3018               	movlw	24
  2095  014A  0024               	movlb	4	; select bank4
  2096  014B  008C               	movwf	12	;volatile
  2097                           
  2098                           ;pin_manager.c: 76: OPTION_REGbits.nWPUEN = 0;
  2099  014C  0021               	movlb	1	; select bank1
  2100  014D  1395               	bcf	21,7	;volatile
  2101                           
  2102                           ;pin_manager.c: 81: ODCONA = 0x00;
  2103  014E  0025               	movlb	5	; select bank5
  2104  014F  018C               	clrf	12	;volatile
  2105                           
  2106                           ;pin_manager.c: 86: APFCON = 0x00;
  2107  0150  0022               	movlb	2	; select bank2
  2108  0151  019D               	clrf	29	;volatile
  2109                           
  2110                           ;pin_manager.c: 92: IOCAFbits.IOCAF2 = 0;
  2111  0152  0027               	movlb	7	; select bank7
  2112  0153  1113               	bcf	19,2	;volatile
  2113                           
  2114                           ;pin_manager.c: 93: IOCAFbits.IOCAF3 = 0;
  2115  0154  1193               	bcf	19,3	;volatile
  2116                           
  2117                           ;pin_manager.c: 95: IOCANbits.IOCAN2 = 1;
  2118  0155  1512               	bsf	18,2	;volatile
  2119                           
  2120                           ;pin_manager.c: 96: IOCANbits.IOCAN3 = 1;
  2121  0156  1592               	bsf	18,3	;volatile
  2122                           
  2123                           ;pin_manager.c: 98: IOCAPbits.IOCAP2 = 1;
  2124  0157  1511               	bsf	17,2	;volatile
  2125                           
  2126                           ;pin_manager.c: 99: IOCAPbits.IOCAP3 = 1;
  2127  0158  1591               	bsf	17,3	;volatile
  2128                           
  2129                           ;pin_manager.c: 106: INTCONbits.IOCIE = 1;
  2130  0159  158B               	bsf	11,3	;volatile
  2131  015A  0008               	return
  2132  015B                     __end_of_PIN_MANAGER_Initialize:	
  2133                           
  2134                           	psect	text8
  2135  0191                     __ptext8:	
  2136 ;; *************** function _OSCILLATOR_Initialize *****************
  2137 ;; Defined at:
  2138 ;;		line 78 in file "mcc_generated_files/mcc.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2
  2147 ;; Tracked objects:
  2148 ;;		On entry : B1F/7
  2149 ;;		On exit  : B1F/2
  2150 ;;		Unchanged: B00/0
  2151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2152 ;;      Params:         0       0       0       0
  2153 ;;      Locals:         0       0       0       0
  2154 ;;      Temps:          0       0       0       0
  2155 ;;      Totals:         0       0       0       0
  2156 ;;Total ram usage:        0 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; Hardware stack levels required when called:    4
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_SYSTEM_Initialize
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           
  2167                           ;psect for function _OSCILLATOR_Initialize
  2168  0191                     _OSCILLATOR_Initialize:	
  2169                           
  2170                           ;mcc.c: 81: OSCCON = 0x78;
  2171                           
  2172                           ;incstack = 0
  2173                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2174  0191  3078               	movlw	120
  2175  0192  0021               	movlb	1	; select bank1
  2176  0193  0099               	movwf	25	;volatile
  2177                           
  2178                           ;mcc.c: 83: OSCTUNE = 0x00;
  2179  0194  0198               	clrf	24	;volatile
  2180                           
  2181                           ;mcc.c: 85: BORCON = 0x00;
  2182  0195  0022               	movlb	2	; select bank2
  2183  0196  0196               	clrf	22	;volatile
  2184  0197  0008               	return
  2185  0198                     __end_of_OSCILLATOR_Initialize:	
  2186                           
  2187                           	psect	text9
  2188  008B                     __ptext9:	
  2189 ;; *************** function _CheckForButtonPushes *****************
  2190 ;; Defined at:
  2191 ;;		line 273 in file "main.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;		None
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;		None
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      unsigned char 
  2198 ;; Registers used:
  2199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/1B
  2202 ;;		On exit  : 1F/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2205 ;;      Params:         0       0       0       0
  2206 ;;      Locals:         1       0       0       0
  2207 ;;      Temps:          0       0       0       0
  2208 ;;      Totals:         1       0       0       0
  2209 ;;Total ram usage:        1 bytes
  2210 ;; Hardware stack levels used:    1
  2211 ;; Hardware stack levels required when called:    7
  2212 ;; This function calls:
  2213 ;;		_SpeedButtonJustGotPressed
  2214 ;;		_SpeedButtonJustGotReleased
  2215 ;;		_SpeedButtonPressedRaw
  2216 ;;		_StartButtonJustGotPressed
  2217 ;;		_StartButtonJustGotReleased
  2218 ;;		_StartButtonPressedRaw
  2219 ;; This function is called by:
  2220 ;;		_main
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           
  2225                           ;psect for function _CheckForButtonPushes
  2226  008B                     _CheckForButtonPushes:	
  2227                           
  2228                           ;main.c: 275: static bool LastStartButtonState = 0;;main.c: 276: static bool LastSpeedBu
      +                          ttonState = 0;;main.c: 279: if (StartButtonPressedRaw())
  2229                           
  2230                           ;incstack = 0
  2231                           ; Regs used in _CheckForButtonPushes: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2232  008B  2198               	fcall	_StartButtonPressedRaw
  2233  008C  3A00               	xorlw	0
  2234  008D  1903               	skipnz
  2235  008E  289E               	goto	l1363
  2236                           
  2237                           ;main.c: 280: {;main.c: 281: if (StartButtonState == BUTTON_STATE_PRESSED_TIMING)
  2238  008F  0B75               	decfsz	_StartButtonState,w	;volatile
  2239  0090  2898               	goto	l1359
  2240                           
  2241                           ;main.c: 282: {;main.c: 283: if (StartDebounceTimer == 0)
  2242  0091  0877               	movf	_StartDebounceTimer,w	;volatile
  2243  0092  1D03               	btfss	3,2
  2244  0093  28B1               	goto	l1375
  2245                           
  2246                           ;main.c: 284: {;main.c: 285: StartButtonState = BUTTON_STATE_PRESSED;
  2247  0094  3002               	movlw	2
  2248  0095  00F5               	movwf	_StartButtonState	;volatile
  2249                           
  2250                           ;main.c: 286: StartButtonJustGotPressed();
  2251  0096  215B               	fcall	_StartButtonJustGotPressed
  2252  0097  28B1               	goto	l1375
  2253  0098                     l1359:	
  2254                           
  2255                           ;main.c: 289: else if (StartButtonState != BUTTON_STATE_PRESSED)
  2256  0098  3002               	movlw	2
  2257  0099  0675               	xorwf	_StartButtonState,w	;volatile
  2258  009A  1903               	btfsc	3,2
  2259  009B  28B1               	goto	l1375
  2260                           
  2261                           ;main.c: 290: {;main.c: 291: StartButtonState = BUTTON_STATE_PRESSED_TIMING;
  2262  009C  3001               	movlw	1
  2263  009D  28AE               	goto	L1
  2264  009E                     l1363:	
  2265                           ;main.c: 292: StartDebounceTimer = 20;
  2266                           
  2267                           
  2268                           ;main.c: 295: else;main.c: 296: {;main.c: 297: if (StartButtonState == BUTTON_STATE_RELE
      +                          ASED_TIMING)
  2269  009E  3003               	movlw	3
  2270  009F  0675               	xorwf	_StartButtonState,w	;volatile
  2271  00A0  1D03               	btfss	3,2
  2272  00A1  28A9               	goto	l1371
  2273                           
  2274                           ;main.c: 298: {;main.c: 299: if (StartDebounceTimer == 0)
  2275  00A2  0877               	movf	_StartDebounceTimer,w	;volatile
  2276  00A3  1D03               	btfss	3,2
  2277  00A4  28B1               	goto	l1375
  2278                           
  2279                           ;main.c: 300: {;main.c: 301: StartButtonState = BUTTON_STATE_RELEASED;
  2280  00A5  3004               	movlw	4
  2281  00A6  00F5               	movwf	_StartButtonState	;volatile
  2282                           
  2283                           ;main.c: 302: StartButtonJustGotReleased();
  2284  00A7  21E9               	fcall	_StartButtonJustGotReleased
  2285  00A8  28B1               	goto	l1375
  2286  00A9                     l1371:	
  2287                           
  2288                           ;main.c: 305: else if (StartButtonState != BUTTON_STATE_RELEASED)
  2289  00A9  3004               	movlw	4
  2290  00AA  0675               	xorwf	_StartButtonState,w	;volatile
  2291  00AB  1903               	btfsc	3,2
  2292  00AC  28B1               	goto	l1375
  2293                           
  2294                           ;main.c: 306: {;main.c: 307: StartButtonState = BUTTON_STATE_RELEASED_TIMING;
  2295  00AD  3003               	movlw	3
  2296  00AE                     L1:	
  2297  00AE  00F5               	movwf	_StartButtonState	;volatile
  2298                           
  2299                           ;main.c: 308: StartDebounceTimer = 20;
  2300  00AF  3014               	movlw	20
  2301  00B0  00F7               	movwf	_StartDebounceTimer	;volatile
  2302  00B1                     l1375:	
  2303                           
  2304                           ;main.c: 309: };main.c: 310: };main.c: 313: if (SpeedButtonPressedRaw())
  2305  00B1  21AC               	fcall	_SpeedButtonPressedRaw
  2306  00B2  3A00               	xorlw	0
  2307  00B3  1903               	skipnz
  2308  00B4  28C4               	goto	l1389
  2309                           
  2310                           ;main.c: 314: {;main.c: 315: if (SpeedButtonState == BUTTON_STATE_PRESSED_TIMING)
  2311  00B5  0B74               	decfsz	_SpeedButtonState,w	;volatile
  2312  00B6  28BE               	goto	l1385
  2313                           
  2314                           ;main.c: 316: {;main.c: 317: if (SpeedDebounceTimer == 0)
  2315  00B7  0876               	movf	_SpeedDebounceTimer,w	;volatile
  2316  00B8  1D03               	btfss	3,2
  2317  00B9  28D7               	goto	l1401
  2318                           
  2319                           ;main.c: 318: {;main.c: 319: SpeedButtonState = BUTTON_STATE_PRESSED;
  2320  00BA  3002               	movlw	2
  2321  00BB  00F4               	movwf	_SpeedButtonState	;volatile
  2322                           
  2323                           ;main.c: 320: SpeedButtonJustGotPressed();
  2324  00BC  2189               	fcall	_SpeedButtonJustGotPressed
  2325  00BD  28D7               	goto	l1401
  2326  00BE                     l1385:	
  2327                           
  2328                           ;main.c: 323: else if (SpeedButtonState != BUTTON_STATE_PRESSED)
  2329  00BE  3002               	movlw	2
  2330  00BF  0674               	xorwf	_SpeedButtonState,w	;volatile
  2331  00C0  1903               	btfsc	3,2
  2332  00C1  28D7               	goto	l1401
  2333                           
  2334                           ;main.c: 324: {;main.c: 325: SpeedButtonState = BUTTON_STATE_PRESSED_TIMING;
  2335  00C2  3001               	movlw	1
  2336  00C3  28D4               	goto	L2
  2337  00C4                     l1389:	
  2338                           ;main.c: 326: SpeedDebounceTimer = 20;
  2339                           
  2340                           
  2341                           ;main.c: 329: else;main.c: 330: {;main.c: 331: if (SpeedButtonState == BUTTON_STATE_RELE
      +                          ASED_TIMING)
  2342  00C4  3003               	movlw	3
  2343  00C5  0674               	xorwf	_SpeedButtonState,w	;volatile
  2344  00C6  1D03               	btfss	3,2
  2345  00C7  28CF               	goto	l1397
  2346                           
  2347                           ;main.c: 332: {;main.c: 333: if (SpeedDebounceTimer == 0)
  2348  00C8  0876               	movf	_SpeedDebounceTimer,w	;volatile
  2349  00C9  1D03               	btfss	3,2
  2350  00CA  28D7               	goto	l1401
  2351                           
  2352                           ;main.c: 334: {;main.c: 335: SpeedButtonState = BUTTON_STATE_RELEASED;
  2353  00CB  3004               	movlw	4
  2354  00CC  00F4               	movwf	_SpeedButtonState	;volatile
  2355                           
  2356                           ;main.c: 336: SpeedButtonJustGotReleased();
  2357  00CD  21EA               	fcall	_SpeedButtonJustGotReleased
  2358  00CE  28D7               	goto	l1401
  2359  00CF                     l1397:	
  2360                           
  2361                           ;main.c: 339: else if (SpeedButtonState != BUTTON_STATE_RELEASED)
  2362  00CF  3004               	movlw	4
  2363  00D0  0674               	xorwf	_SpeedButtonState,w	;volatile
  2364  00D1  1903               	btfsc	3,2
  2365  00D2  28D7               	goto	l1401
  2366                           
  2367                           ;main.c: 340: {;main.c: 341: SpeedButtonState = BUTTON_STATE_RELEASED_TIMING;
  2368  00D3  3003               	movlw	3
  2369  00D4                     L2:	
  2370  00D4  00F4               	movwf	_SpeedButtonState	;volatile
  2371                           
  2372                           ;main.c: 342: SpeedDebounceTimer = 20;
  2373  00D5  3014               	movlw	20
  2374  00D6  00F6               	movwf	_SpeedDebounceTimer	;volatile
  2375  00D7                     l1401:	
  2376                           
  2377                           ;main.c: 343: };main.c: 344: };main.c: 346: return ((bool)(StartButtonPressedRaw() || Sp
      +                          eedButtonPressedRaw()));
  2378  00D7  01FC               	clrf	_CheckForButtonPushes$463
  2379  00D8  0AFC               	incf	_CheckForButtonPushes$463,f
  2380  00D9  2198               	fcall	_StartButtonPressedRaw
  2381  00DA  3A00               	xorlw	0
  2382  00DB  1D03               	skipz
  2383  00DC  28E2               	goto	l1409
  2384  00DD  21AC               	fcall	_SpeedButtonPressedRaw
  2385  00DE  3A00               	xorlw	0
  2386  00DF  1D03               	skipz
  2387  00E0  28E2               	goto	l1409
  2388  00E1  01FC               	clrf	_CheckForButtonPushes$463
  2389  00E2                     l1409:	
  2390  00E2  087C               	movf	_CheckForButtonPushes$463,w
  2391  00E3  0008               	return
  2392  00E4                     __end_of_CheckForButtonPushes:	
  2393                           
  2394                           	psect	text10
  2395  0198                     __ptext10:	
  2396 ;; *************** function _StartButtonPressedRaw *****************
  2397 ;; Defined at:
  2398 ;;		line 208 in file "main.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      unsigned char 
  2405 ;; Registers used:
  2406 ;;		wreg, status,0
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/1B
  2409 ;;		On exit  : 1F/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2412 ;;      Params:         0       0       0       0
  2413 ;;      Locals:         0       0       0       0
  2414 ;;      Temps:          0       0       0       0
  2415 ;;      Totals:         0       0       0       0
  2416 ;;Total ram usage:        0 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    4
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_CheckForButtonPushes
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           
  2427                           ;psect for function _StartButtonPressedRaw
  2428  0198                     _StartButtonPressedRaw:	
  2429                           
  2430                           ;main.c: 210: return (uint8_t)(PORTAbits.RA4 == 0);
  2431                           
  2432                           ;incstack = 0
  2433                           ; Regs used in _StartButtonPressedRaw: [wreg+status,0]
  2434  0198  1003               	clrc
  2435  0199  0020               	movlb	0	; select bank0
  2436  019A  1E0C               	btfss	12,4	;volatile
  2437  019B  1403               	setc
  2438  019C  3000               	movlw	0
  2439  019D  3D09               	addwfc	9,w
  2440  019E  0008               	return
  2441  019F                     __end_of_StartButtonPressedRaw:	
  2442                           
  2443                           	psect	text11
  2444  01E9                     __ptext11:	
  2445 ;; *************** function _StartButtonJustGotReleased *****************
  2446 ;; Defined at:
  2447 ;;		line 267 in file "main.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;		None
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;		None
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		None
  2456 ;; Tracked objects:
  2457 ;;		On entry : 1F/0
  2458 ;;		On exit  : 1F/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2461 ;;      Params:         0       0       0       0
  2462 ;;      Locals:         0       0       0       0
  2463 ;;      Temps:          0       0       0       0
  2464 ;;      Totals:         0       0       0       0
  2465 ;;Total ram usage:        0 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    4
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_CheckForButtonPushes
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           
  2476                           ;psect for function _StartButtonJustGotReleased
  2477  01E9                     _StartButtonJustGotReleased:	
  2478                           
  2479                           ;main.c: 269: WakeTimer = 0;
  2480                           
  2481                           ;incstack = 0
  2482                           ; Regs used in _StartButtonJustGotReleased: []
  2483  01E9  296E               	ljmp	PL2	;call to abstracted procedure
  2484  01EA                     __end_of_StartButtonJustGotReleased:	
  2485                           
  2486                           	psect	text12
  2487  015B                     __ptext12:	
  2488 ;; *************** function _StartButtonJustGotPressed *****************
  2489 ;; Defined at:
  2490 ;;		line 247 in file "main.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 1F/0
  2501 ;;		On exit  : 1F/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2504 ;;      Params:         0       0       0       0
  2505 ;;      Locals:         0       0       0       0
  2506 ;;      Temps:          0       0       0       0
  2507 ;;      Totals:         0       0       0       0
  2508 ;;Total ram usage:        0 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    5
  2511 ;; This function calls:
  2512 ;;		_PWM3_Start
  2513 ;;		_PWM3_Stop
  2514 ;; This function is called by:
  2515 ;;		_CheckForButtonPushes
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           
  2520                           ;psect for function _StartButtonJustGotPressed
  2521  015B                     _StartButtonJustGotPressed:	
  2522                           
  2523                           ;main.c: 249: switch (MotorState)
  2524                           
  2525                           ;incstack = 0
  2526                           ; Regs used in _StartButtonJustGotPressed: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2527  015B  2965               	goto	l1325
  2528  015C                     l1315:	
  2529                           
  2530                           ;main.c: 252: PWM3_Start();
  2531  015C  21D1               	fcall	_PWM3_Start
  2532                           
  2533                           ;main.c: 253: MotorState = 1;
  2534  015D  0020               	movlb	0	; select bank0
  2535  015E  01AD               	clrf	_MotorState
  2536  015F  0AAD               	incf	_MotorState,f
  2537                           
  2538                           ;main.c: 254: break;
  2539  0160  296D               	goto	l229
  2540  0161                     l1319:	
  2541                           
  2542                           ;main.c: 257: PWM3_Stop();
  2543  0161  21CE               	fcall	_PWM3_Stop
  2544                           
  2545                           ;main.c: 258: MotorState = 0;
  2546  0162  0020               	movlb	0	; select bank0
  2547  0163  01AD               	clrf	_MotorState
  2548                           
  2549                           ;main.c: 259: break;
  2550  0164  296D               	goto	l229
  2551  0165                     l1325:	
  2552  0165  082D               	movf	_MotorState,w
  2553                           
  2554                           ; Switch size 1, requested type "space"
  2555                           ; Number of cases is 2, Range of values is 0 to 1
  2556                           ; switch strategies available:
  2557                           ; Name         Instructions Cycles
  2558                           ; simple_byte            7     4 (average)
  2559                           ; direct_byte           10     6 (fixed)
  2560                           ; jumptable            260     6 (fixed)
  2561                           ;	Chosen strategy is simple_byte
  2562  0166  3A00               	xorlw	0	; case 0
  2563  0167  1903               	skipnz
  2564  0168  295C               	goto	l1315
  2565  0169  3A01               	xorlw	1	; case 1
  2566  016A  1903               	skipnz
  2567  016B  2961               	goto	l1319
  2568  016C  296D               	goto	l229
  2569  016D                     l229:	
  2570                           
  2571                           ;main.c: 264: WakeTimer = 0;
  2572  016D  296E               	ljmp	PL2	;call to abstracted procedure
  2573  016E                     __end_of_StartButtonJustGotPressed:	
  2574  016E                     PL2:	
  2575  016E  01AE               	clrf	_WakeTimer	;volatile
  2576  016F  01AF               	clrf	_WakeTimer+1	;volatile
  2577  0170  01B0               	clrf	_WakeTimer+2	;volatile
  2578  0171  01B1               	clrf	_WakeTimer+3	;volatile
  2579  0172  0008               	return
  2580  0173                     __end_ofPL2:	
  2581                           
  2582                           	psect	text13
  2583  01CE                     __ptext13:	
  2584 ;; *************** function _PWM3_Stop *****************
  2585 ;; Defined at:
  2586 ;;		line 117 in file "mcc_generated_files/pwm3.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;		None
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		None
  2595 ;; Tracked objects:
  2596 ;;		On entry : 1D/2
  2597 ;;		On exit  : 1F/1B
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2600 ;;      Params:         0       0       0       0
  2601 ;;      Locals:         0       0       0       0
  2602 ;;      Temps:          0       0       0       0
  2603 ;;      Totals:         0       0       0       0
  2604 ;;Total ram usage:        0 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    4
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_StartButtonJustGotPressed
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           
  2616                           ;psect for function _PWM3_Stop
  2617  01CE                     _PWM3_Stop:	
  2618                           
  2619                           ;pwm3.c: 119: PWM3CONbits.EN = 0;
  2620                           
  2621                           ;incstack = 0
  2622                           ; Regs used in _PWM3_Stop: []
  2623  01CE  003B               	movlb	27	; select bank27
  2624  01CF  13BB               	bcf	59,7	;volatile
  2625  01D0  0008               	return
  2626  01D1                     __end_of_PWM3_Stop:	
  2627                           
  2628                           	psect	text14
  2629  01D1                     __ptext14:	
  2630 ;; *************** function _PWM3_Start *****************
  2631 ;; Defined at:
  2632 ;;		line 112 in file "mcc_generated_files/pwm3.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;		None
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		None
  2641 ;; Tracked objects:
  2642 ;;		On entry : 1F/0
  2643 ;;		On exit  : 1F/1B
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2646 ;;      Params:         0       0       0       0
  2647 ;;      Locals:         0       0       0       0
  2648 ;;      Temps:          0       0       0       0
  2649 ;;      Totals:         0       0       0       0
  2650 ;;Total ram usage:        0 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; Hardware stack levels required when called:    4
  2653 ;; This function calls:
  2654 ;;		Nothing
  2655 ;; This function is called by:
  2656 ;;		_StartButtonJustGotPressed
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           
  2661                           ;psect for function _PWM3_Start
  2662  01D1                     _PWM3_Start:	
  2663                           
  2664                           ;pwm3.c: 114: PWM3CONbits.EN = 1;
  2665                           
  2666                           ;incstack = 0
  2667                           ; Regs used in _PWM3_Start: []
  2668  01D1  003B               	movlb	27	; select bank27
  2669  01D2  17BB               	bsf	59,7	;volatile
  2670  01D3  0008               	return
  2671  01D4                     __end_of_PWM3_Start:	
  2672                           
  2673                           	psect	text15
  2674  01AC                     __ptext15:	
  2675 ;; *************** function _SpeedButtonPressedRaw *****************
  2676 ;; Defined at:
  2677 ;;		line 214 in file "main.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      unsigned char 
  2684 ;; Registers used:
  2685 ;;		wreg, status,0
  2686 ;; Tracked objects:
  2687 ;;		On entry : 1F/0
  2688 ;;		On exit  : 1F/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2691 ;;      Params:         0       0       0       0
  2692 ;;      Locals:         0       0       0       0
  2693 ;;      Temps:          0       0       0       0
  2694 ;;      Totals:         0       0       0       0
  2695 ;;Total ram usage:        0 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:    4
  2698 ;; This function calls:
  2699 ;;		Nothing
  2700 ;; This function is called by:
  2701 ;;		_CheckForButtonPushes
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           
  2706                           ;psect for function _SpeedButtonPressedRaw
  2707  01AC                     _SpeedButtonPressedRaw:	
  2708                           
  2709                           ;main.c: 216: return (uint8_t)(PORTAbits.RA3 == 0);
  2710                           
  2711                           ;incstack = 0
  2712                           ; Regs used in _SpeedButtonPressedRaw: [wreg+status,0]
  2713  01AC  1003               	clrc
  2714  01AD  1D8C               	btfss	12,3	;volatile
  2715  01AE  1403               	setc
  2716  01AF  3000               	movlw	0
  2717  01B0  3D09               	addwfc	9,w
  2718  01B1  0008               	return
  2719  01B2                     __end_of_SpeedButtonPressedRaw:	
  2720                           
  2721                           	psect	text16
  2722  01EA                     __ptext16:	
  2723 ;; *************** function _SpeedButtonJustGotReleased *****************
  2724 ;; Defined at:
  2725 ;;		line 242 in file "main.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;		None
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		None
  2734 ;; Tracked objects:
  2735 ;;		On entry : 1F/0
  2736 ;;		On exit  : 1F/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2739 ;;      Params:         0       0       0       0
  2740 ;;      Locals:         0       0       0       0
  2741 ;;      Temps:          0       0       0       0
  2742 ;;      Totals:         0       0       0       0
  2743 ;;Total ram usage:        0 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; Hardware stack levels required when called:    4
  2746 ;; This function calls:
  2747 ;;		Nothing
  2748 ;; This function is called by:
  2749 ;;		_CheckForButtonPushes
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           
  2754                           ;psect for function _SpeedButtonJustGotReleased
  2755  01EA                     _SpeedButtonJustGotReleased:	
  2756                           
  2757                           ;main.c: 244: WakeTimer = 0;
  2758                           
  2759                           ;incstack = 0
  2760                           ; Regs used in _SpeedButtonJustGotReleased: []
  2761  01EA  296E               	ljmp	PL2	;call to abstracted procedure
  2762  01EB                     __end_of_SpeedButtonJustGotReleased:	
  2763                           
  2764                           	psect	text17
  2765  0189                     __ptext17:	
  2766 ;; *************** function _SpeedButtonJustGotPressed *****************
  2767 ;; Defined at:
  2768 ;;		line 231 in file "main.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;		None
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      void 
  2775 ;; Registers used:
  2776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2777 ;; Tracked objects:
  2778 ;;		On entry : 1F/0
  2779 ;;		On exit  : 1F/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2782 ;;      Params:         0       0       0       0
  2783 ;;      Locals:         0       0       0       0
  2784 ;;      Temps:          0       0       0       0
  2785 ;;      Totals:         0       0       0       0
  2786 ;;Total ram usage:        0 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    6
  2789 ;; This function calls:
  2790 ;;		_UpdateLEDs
  2791 ;; This function is called by:
  2792 ;;		_CheckForButtonPushes
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           
  2797                           ;psect for function _SpeedButtonJustGotPressed
  2798  0189                     _SpeedButtonJustGotPressed:	
  2799  0189  3003               	movlw	3
  2800                           
  2801                           ;main.c: 233: SpeedLEDState++;
  2802                           
  2803                           ;incstack = 0
  2804                           ; Regs used in _SpeedButtonJustGotPressed: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2805  018A  0AF9               	incf	_SpeedLEDState,f
  2806                           
  2807                           ;main.c: 234: if (SpeedLEDState >= 3)
  2808  018B  0279               	subwf	_SpeedLEDState,w
  2809  018C  1803               	btfsc	3,0
  2810                           
  2811                           ;main.c: 235: {;main.c: 236: SpeedLEDState = 0;
  2812  018D  01F9               	clrf	_SpeedLEDState
  2813                           
  2814                           ;main.c: 237: };main.c: 238: UpdateLEDs();
  2815  018E  20E4               	fcall	_UpdateLEDs
  2816                           
  2817                           ;main.c: 239: WakeTimer = 0;
  2818  018F  0020               	movlb	0	; select bank0
  2819  0190  296E               	ljmp	PL2	;call to abstracted procedure
  2820  0191                     __end_of_SpeedButtonJustGotPressed:	
  2821                           
  2822                           	psect	text18
  2823  00E4                     __ptext18:	
  2824 ;; *************** function _UpdateLEDs *****************
  2825 ;; Defined at:
  2826 ;;		line 174 in file "main.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;		None
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;		None
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  1    wreg      void 
  2833 ;; Registers used:
  2834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2835 ;; Tracked objects:
  2836 ;;		On entry : 1D/2
  2837 ;;		On exit  : 4/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2840 ;;      Params:         0       0       0       0
  2841 ;;      Locals:         0       0       0       0
  2842 ;;      Temps:          0       0       0       0
  2843 ;;      Totals:         0       0       0       0
  2844 ;;Total ram usage:        0 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; Hardware stack levels required when called:    5
  2847 ;; This function calls:
  2848 ;;		_HIGH_LED_OFF
  2849 ;;		_HIGH_LED_ON
  2850 ;;		_LOW_LED_OFF
  2851 ;;		_LOW_LED_ON
  2852 ;;		_MEDIUM_LED_OFF
  2853 ;;		_MEDIUM_LED_ON
  2854 ;;		_PWM3_DutyCycleSet
  2855 ;;		_PWM3_LoadBufferSet
  2856 ;; This function is called by:
  2857 ;;		_SpeedButtonJustGotPressed
  2858 ;;		_main
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           
  2863                           ;psect for function _UpdateLEDs
  2864  00E4                     _UpdateLEDs:	
  2865                           
  2866                           ;main.c: 176: switch (SpeedLEDState)
  2867                           
  2868                           ;incstack = 0
  2869                           ; Regs used in _UpdateLEDs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2870  00E4  28FA               	goto	l1205
  2871  00E5                     l1185:	
  2872                           
  2873                           ;main.c: 179: LOW_LED_ON();
  2874  00E5  21D7               	fcall	_LOW_LED_ON
  2875                           
  2876                           ;main.c: 180: MEDIUM_LED_OFF();
  2877  00E6  21DF               	fcall	_MEDIUM_LED_OFF
  2878                           
  2879                           ;main.c: 181: HIGH_LED_OFF();
  2880  00E7  21E3               	fcall	_HIGH_LED_OFF
  2881                           
  2882                           ;main.c: 182: PWM3_DutyCycleSet(800);
  2883  00E8  3020               	movlw	32
  2884  00E9                     L3:	
  2885  00E9  00FA               	movwf	PWM3_DutyCycleSet@dutyCycleCount
  2886  00EA  3003               	movlw	3
  2887  00EB                     L4:	
  2888  00EB  00FB               	movwf	PWM3_DutyCycleSet@dutyCycleCount+1
  2889  00EC  21B2               	fcall	_PWM3_DutyCycleSet
  2890                           
  2891                           ;main.c: 183: PWM3_LoadBufferSet();
  2892  00ED  29D4               	ljmp	l1157
  2893  00EE                     l1191:	
  2894                           ;main.c: 184: break;
  2895                           
  2896                           
  2897                           ;main.c: 187: LOW_LED_OFF();
  2898  00EE  21DA               	fcall	_LOW_LED_OFF
  2899                           
  2900                           ;main.c: 188: MEDIUM_LED_ON();
  2901  00EF  21DD               	fcall	_MEDIUM_LED_ON
  2902                           
  2903                           ;main.c: 189: HIGH_LED_OFF();
  2904  00F0  21E3               	fcall	_HIGH_LED_OFF
  2905                           
  2906                           ;main.c: 190: PWM3_DutyCycleSet(1000);
  2907  00F1  30E8               	movlw	232
  2908  00F2  28E9               	goto	L3
  2909  00F3                     l1197:	
  2910                           
  2911                           ;main.c: 195: LOW_LED_OFF();
  2912  00F3  21DA               	fcall	_LOW_LED_OFF
  2913                           
  2914                           ;main.c: 196: MEDIUM_LED_OFF();
  2915  00F4  21DF               	fcall	_MEDIUM_LED_OFF
  2916                           
  2917                           ;main.c: 197: HIGH_LED_ON();
  2918  00F5  21E1               	fcall	_HIGH_LED_ON
  2919                           
  2920                           ;main.c: 198: PWM3_DutyCycleSet(1249);
  2921  00F6  30E1               	movlw	225
  2922  00F7  00FA               	movwf	PWM3_DutyCycleSet@dutyCycleCount
  2923  00F8  3004               	movlw	4
  2924  00F9  28EB               	goto	L4
  2925  00FA                     l1205:	
  2926  00FA  0879               	movf	_SpeedLEDState,w
  2927                           
  2928                           ; Switch size 1, requested type "space"
  2929                           ; Number of cases is 3, Range of values is 0 to 2
  2930                           ; switch strategies available:
  2931                           ; Name         Instructions Cycles
  2932                           ; simple_byte           10     6 (average)
  2933                           ; direct_byte           12     6 (fixed)
  2934                           ; jumptable            260     6 (fixed)
  2935                           ;	Chosen strategy is simple_byte
  2936  00FB  3A00               	xorlw	0	; case 0
  2937  00FC  1903               	skipnz
  2938  00FD  28E5               	goto	l1185
  2939  00FE  3A01               	xorlw	1	; case 1
  2940  00FF  1903               	skipnz
  2941  0100  28EE               	goto	l1191
  2942  0101  3A03               	xorlw	3	; case 2
  2943  0102  1903               	skipnz
  2944  0103  28F3               	goto	l1197
  2945  0104  2905               	goto	l205
  2946  0105                     l205:	
  2947  0105  0008               	return
  2948  0106                     __end_of_UpdateLEDs:	
  2949                           
  2950                           	psect	text19
  2951  01D4                     __ptext19:	
  2952 ;; *************** function _PWM3_LoadBufferSet *****************
  2953 ;; Defined at:
  2954 ;;		line 127 in file "mcc_generated_files/pwm3.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;		None
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;		None
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  1    wreg      void 
  2961 ;; Registers used:
  2962 ;;		None
  2963 ;; Tracked objects:
  2964 ;;		On entry : 4/1B
  2965 ;;		On exit  : 1F/1B
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2968 ;;      Params:         0       0       0       0
  2969 ;;      Locals:         0       0       0       0
  2970 ;;      Temps:          0       0       0       0
  2971 ;;      Totals:         0       0       0       0
  2972 ;;Total ram usage:        0 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; Hardware stack levels required when called:    4
  2975 ;; This function calls:
  2976 ;;		Nothing
  2977 ;; This function is called by:
  2978 ;;		_UpdateLEDs
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           
  2983                           ;psect for function _PWM3_LoadBufferSet
  2984  01D4                     _PWM3_LoadBufferSet:	
  2985  01D4                     l1157:	
  2986                           ;incstack = 0
  2987                           ; Regs used in _PWM3_LoadBufferSet: []
  2988                           
  2989                           
  2990                           ;pwm3.c: 129: PWM3LDCONbits.LDA = 1;
  2991  01D4  003B               	movlb	27	; select bank27
  2992  01D5  17BF               	bsf	63,7	;volatile
  2993  01D6  0008               	return
  2994  01D7                     __end_of_PWM3_LoadBufferSet:	
  2995                           
  2996                           	psect	text20
  2997  01B2                     __ptext20:	
  2998 ;; *************** function _PWM3_DutyCycleSet *****************
  2999 ;; Defined at:
  3000 ;;		line 138 in file "mcc_generated_files/pwm3.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  dutyCycleCou    2    0[COMMON] unsigned int 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg
  3009 ;; Tracked objects:
  3010 ;;		On entry : 1F/2
  3011 ;;		On exit  : 1F/1B
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3014 ;;      Params:         2       0       0       0
  3015 ;;      Locals:         0       0       0       0
  3016 ;;      Temps:          0       0       0       0
  3017 ;;      Totals:         2       0       0       0
  3018 ;;Total ram usage:        2 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; Hardware stack levels required when called:    4
  3021 ;; This function calls:
  3022 ;;		Nothing
  3023 ;; This function is called by:
  3024 ;;		_UpdateLEDs
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           
  3029                           ;psect for function _PWM3_DutyCycleSet
  3030  01B2                     _PWM3_DutyCycleSet:	
  3031                           
  3032                           ;pwm3.c: 140: PWM3DCH = (dutyCycleCount>>8);
  3033                           
  3034                           ;incstack = 0
  3035                           ; Regs used in _PWM3_DutyCycleSet: [wreg]
  3036  01B2  087B               	movf	PWM3_DutyCycleSet@dutyCycleCount+1,w
  3037  01B3  003B               	movlb	27	; select bank27
  3038  01B4  00B4               	movwf	52	;volatile
  3039                           
  3040                           ;pwm3.c: 141: PWM3DCL = (dutyCycleCount);
  3041  01B5  087A               	movf	PWM3_DutyCycleSet@dutyCycleCount,w
  3042  01B6  00B3               	movwf	51	;volatile
  3043  01B7  0008               	return
  3044  01B8                     __end_of_PWM3_DutyCycleSet:	
  3045                           
  3046                           	psect	text21
  3047  01DD                     __ptext21:	
  3048 ;; *************** function _MEDIUM_LED_ON *****************
  3049 ;; Defined at:
  3050 ;;		line 157 in file "main.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		None
  3059 ;; Tracked objects:
  3060 ;;		On entry : 1F/2
  3061 ;;		On exit  : 1F/2
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3064 ;;      Params:         0       0       0       0
  3065 ;;      Locals:         0       0       0       0
  3066 ;;      Temps:          0       0       0       0
  3067 ;;      Totals:         0       0       0       0
  3068 ;;Total ram usage:        0 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    4
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_UpdateLEDs
  3075 ;;		_main
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           
  3080                           ;psect for function _MEDIUM_LED_ON
  3081  01DD                     _MEDIUM_LED_ON:	
  3082                           
  3083                           ;main.c: 159: LATAbits.LATA1 = 1;
  3084                           
  3085                           ;incstack = 0
  3086                           ; Regs used in _MEDIUM_LED_ON: []
  3087  01DD  148C               	bsf	12,1	;volatile
  3088  01DE  0008               	return
  3089  01DF                     __end_of_MEDIUM_LED_ON:	
  3090                           
  3091                           	psect	text22
  3092  01DF                     __ptext22:	
  3093 ;; *************** function _MEDIUM_LED_OFF *****************
  3094 ;; Defined at:
  3095 ;;		line 142 in file "main.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		None
  3104 ;; Tracked objects:
  3105 ;;		On entry : 1F/2
  3106 ;;		On exit  : 1F/2
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3109 ;;      Params:         0       0       0       0
  3110 ;;      Locals:         0       0       0       0
  3111 ;;      Temps:          0       0       0       0
  3112 ;;      Totals:         0       0       0       0
  3113 ;;Total ram usage:        0 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    4
  3116 ;; This function calls:
  3117 ;;		Nothing
  3118 ;; This function is called by:
  3119 ;;		_SetAllLEDsOff
  3120 ;;		_UpdateLEDs
  3121 ;;		_main
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           
  3126                           ;psect for function _MEDIUM_LED_OFF
  3127  01DF                     _MEDIUM_LED_OFF:	
  3128                           
  3129                           ;main.c: 144: LATAbits.LATA1 = 0;
  3130                           
  3131                           ;incstack = 0
  3132                           ; Regs used in _MEDIUM_LED_OFF: []
  3133  01DF  108C               	bcf	12,1	;volatile
  3134  01E0  0008               	return
  3135  01E1                     __end_of_MEDIUM_LED_OFF:	
  3136                           
  3137                           	psect	text23
  3138  01D7                     __ptext23:	
  3139 ;; *************** function _LOW_LED_ON *****************
  3140 ;; Defined at:
  3141 ;;		line 152 in file "main.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;		None
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;		None
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1    wreg      void 
  3148 ;; Registers used:
  3149 ;;		None
  3150 ;; Tracked objects:
  3151 ;;		On entry : 1D/0
  3152 ;;		On exit  : 1F/2
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3155 ;;      Params:         0       0       0       0
  3156 ;;      Locals:         0       0       0       0
  3157 ;;      Temps:          0       0       0       0
  3158 ;;      Totals:         0       0       0       0
  3159 ;;Total ram usage:        0 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; Hardware stack levels required when called:    4
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		_UpdateLEDs
  3166 ;;		_main
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           
  3171                           ;psect for function _LOW_LED_ON
  3172  01D7                     _LOW_LED_ON:	
  3173                           
  3174                           ;main.c: 154: LATAbits.LATA5 = 1;
  3175                           
  3176                           ;incstack = 0
  3177                           ; Regs used in _LOW_LED_ON: []
  3178  01D7  0022               	movlb	2	; select bank2
  3179  01D8  168C               	bsf	12,5	;volatile
  3180  01D9  0008               	return
  3181  01DA                     __end_of_LOW_LED_ON:	
  3182                           
  3183                           	psect	text24
  3184  01DA                     __ptext24:	
  3185 ;; *************** function _LOW_LED_OFF *****************
  3186 ;; Defined at:
  3187 ;;		line 137 in file "main.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;		None
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		None
  3196 ;; Tracked objects:
  3197 ;;		On entry : 1D/2
  3198 ;;		On exit  : 1F/2
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3201 ;;      Params:         0       0       0       0
  3202 ;;      Locals:         0       0       0       0
  3203 ;;      Temps:          0       0       0       0
  3204 ;;      Totals:         0       0       0       0
  3205 ;;Total ram usage:        0 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    4
  3208 ;; This function calls:
  3209 ;;		Nothing
  3210 ;; This function is called by:
  3211 ;;		_SetAllLEDsOff
  3212 ;;		_UpdateLEDs
  3213 ;;		_main
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           
  3218                           ;psect for function _LOW_LED_OFF
  3219  01DA                     _LOW_LED_OFF:	
  3220                           
  3221                           ;main.c: 139: LATAbits.LATA5 = 0;
  3222                           
  3223                           ;incstack = 0
  3224                           ; Regs used in _LOW_LED_OFF: []
  3225  01DA  0022               	movlb	2	; select bank2
  3226  01DB  128C               	bcf	12,5	;volatile
  3227  01DC  0008               	return
  3228  01DD                     __end_of_LOW_LED_OFF:	
  3229                           
  3230                           	psect	text25
  3231  01E1                     __ptext25:	
  3232 ;; *************** function _HIGH_LED_ON *****************
  3233 ;; Defined at:
  3234 ;;		line 162 in file "main.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;		None
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;		None
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      void 
  3241 ;; Registers used:
  3242 ;;		None
  3243 ;; Tracked objects:
  3244 ;;		On entry : 1F/2
  3245 ;;		On exit  : 1F/2
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3248 ;;      Params:         0       0       0       0
  3249 ;;      Locals:         0       0       0       0
  3250 ;;      Temps:          0       0       0       0
  3251 ;;      Totals:         0       0       0       0
  3252 ;;Total ram usage:        0 bytes
  3253 ;; Hardware stack levels used:    1
  3254 ;; Hardware stack levels required when called:    4
  3255 ;; This function calls:
  3256 ;;		Nothing
  3257 ;; This function is called by:
  3258 ;;		_UpdateLEDs
  3259 ;;		_main
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           
  3264                           ;psect for function _HIGH_LED_ON
  3265  01E1                     _HIGH_LED_ON:	
  3266                           
  3267                           ;main.c: 164: LATAbits.LATA0 = 1;
  3268                           
  3269                           ;incstack = 0
  3270                           ; Regs used in _HIGH_LED_ON: []
  3271  01E1  140C               	bsf	12,0	;volatile
  3272  01E2  0008               	return
  3273  01E3                     __end_of_HIGH_LED_ON:	
  3274                           
  3275                           	psect	text26
  3276  01E3                     __ptext26:	
  3277 ;; *************** function _HIGH_LED_OFF *****************
  3278 ;; Defined at:
  3279 ;;		line 147 in file "main.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;		None
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;		None
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  1    wreg      void 
  3286 ;; Registers used:
  3287 ;;		None
  3288 ;; Tracked objects:
  3289 ;;		On entry : 1F/2
  3290 ;;		On exit  : 1F/2
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3293 ;;      Params:         0       0       0       0
  3294 ;;      Locals:         0       0       0       0
  3295 ;;      Temps:          0       0       0       0
  3296 ;;      Totals:         0       0       0       0
  3297 ;;Total ram usage:        0 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; Hardware stack levels required when called:    4
  3300 ;; This function calls:
  3301 ;;		Nothing
  3302 ;; This function is called by:
  3303 ;;		_SetAllLEDsOff
  3304 ;;		_UpdateLEDs
  3305 ;;		_main
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           
  3310                           ;psect for function _HIGH_LED_OFF
  3311  01E3                     _HIGH_LED_OFF:	
  3312  01E3                     l1147:	
  3313                           ;incstack = 0
  3314                           ; Regs used in _HIGH_LED_OFF: []
  3315                           
  3316                           
  3317                           ;main.c: 149: LATAbits.LATA0 = 0;
  3318  01E3  100C               	bcf	12,0	;volatile
  3319  01E4  0008               	return
  3320  01E5                     __end_of_HIGH_LED_OFF:	
  3321                           
  3322                           	psect	intentry
  3323  0004                     __pintentry:	
  3324 ;; *************** function _INTERRUPT_InterruptManager *****************
  3325 ;; Defined at:
  3326 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;		None
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;		None
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1    wreg      void 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0, pclath, cstack
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3340 ;;      Params:         0       0       0       0
  3341 ;;      Locals:         0       0       0       0
  3342 ;;      Temps:          0       0       0       0
  3343 ;;      Totals:         0       0       0       0
  3344 ;;Total ram usage:        0 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    3
  3347 ;; This function calls:
  3348 ;;		_PIN_MANAGER_IOC
  3349 ;;		_TMR0_ISR
  3350 ;; This function is called by:
  3351 ;;		Interrupt level 1
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355  0004                     _INTERRUPT_InterruptManager:	
  3356                           
  3357                           ;incstack = 0
  3358  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3359                           
  3360                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  3361  0005  3180               	pagesel	$
  3362                           
  3363                           ;interrupt_manager.c: 54: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  3364  0006  1A8B               	btfsc	11,5	;volatile
  3365  0007  1D0B               	btfss	11,2	;volatile
  3366  0008  280B               	goto	i1l82
  3367                           
  3368                           ;interrupt_manager.c: 55: {;interrupt_manager.c: 56: TMR0_ISR();
  3369  0009  21C2               	fcall	_TMR0_ISR
  3370                           
  3371                           ;interrupt_manager.c: 57: }
  3372  000A  280F               	goto	i1l86
  3373  000B                     i1l82:	
  3374                           
  3375                           ;interrupt_manager.c: 58: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
  3376  000B  198B               	btfsc	11,3	;volatile
  3377  000C  1C0B               	btfss	11,0	;volatile
  3378  000D  280F               	goto	i1l86
  3379                           
  3380                           ;interrupt_manager.c: 59: {;interrupt_manager.c: 60: PIN_MANAGER_IOC();
  3381  000E  219F               	fcall	_PIN_MANAGER_IOC
  3382  000F                     i1l86:	
  3383                           ;interrupt_manager.c: 61: }
  3384                           
  3385  000F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3386  0010  0009               	retfie
  3387  0011                     __end_of_INTERRUPT_InterruptManager:	
  3388                           
  3389                           	psect	text28
  3390  01C2                     __ptext28:	
  3391 ;; *************** function _TMR0_ISR *****************
  3392 ;; Defined at:
  3393 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;		None
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;		None
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  1    wreg      void 
  3400 ;; Registers used:
  3401 ;;		wreg, status,2, status,0, pclath, cstack
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3407 ;;      Params:         0       0       0       0
  3408 ;;      Locals:         0       0       0       0
  3409 ;;      Temps:          0       0       0       0
  3410 ;;      Totals:         0       0       0       0
  3411 ;;Total ram usage:        0 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; Hardware stack levels required when called:    2
  3414 ;; This function calls:
  3415 ;;		_TMR0_CallBack
  3416 ;; This function is called by:
  3417 ;;		_INTERRUPT_InterruptManager
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           
  3422                           ;psect for function _TMR0_ISR
  3423  01C2                     _TMR0_ISR:	
  3424                           
  3425                           ;tmr0.c: 112: INTCONbits.TMR0IF = 0;
  3426                           
  3427                           ;incstack = 0
  3428                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3429  01C2  110B               	bcf	11,2	;volatile
  3430                           
  3431                           ;tmr0.c: 114: TMR0 = timer0ReloadVal;
  3432  01C3  0020               	movlb	0	; select bank0
  3433  01C4  0834               	movf	_timer0ReloadVal,w	;volatile
  3434  01C5  0095               	movwf	21	;volatile
  3435                           
  3436                           ;tmr0.c: 118: TMR0_CallBack();
  3437  01C6  297F               	ljmp	i1l1289
  3438  01C7                     __end_of_TMR0_ISR:	
  3439                           
  3440                           	psect	text29
  3441  017F                     __ptext29:	
  3442 ;; *************** function _TMR0_CallBack *****************
  3443 ;; Defined at:
  3444 ;;		line 123 in file "mcc_generated_files/tmr0.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;		None
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;		None
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  1    wreg      void 
  3451 ;; Registers used:
  3452 ;;		wreg, status,2, status,0, pclath, cstack
  3453 ;; Tracked objects:
  3454 ;;		On entry : 1F/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3458 ;;      Params:         0       0       0       0
  3459 ;;      Locals:         0       0       0       0
  3460 ;;      Temps:          0       0       0       0
  3461 ;;      Totals:         0       0       0       0
  3462 ;;Total ram usage:        0 bytes
  3463 ;; Hardware stack levels used:    1
  3464 ;; Hardware stack levels required when called:    1
  3465 ;; This function calls:
  3466 ;;		Absolute function
  3467 ;;		_TMR0_Callback
  3468 ;; This function is called by:
  3469 ;;		_TMR0_ISR
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           
  3474                           ;psect for function _TMR0_CallBack
  3475  017F                     _TMR0_CallBack:	
  3476  017F                     i1l1289:	
  3477                           ;incstack = 0
  3478                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3479                           
  3480                           
  3481                           ;tmr0.c: 127: if(TMR0_InterruptHandler)
  3482  017F  0832               	movf	_TMR0_InterruptHandler,w
  3483  0180  0433               	iorwf	_TMR0_InterruptHandler+1,w
  3484  0181  1903               	btfsc	3,2
  3485  0182  0008               	return
  3486                           
  3487                           ;tmr0.c: 128: {;tmr0.c: 129: TMR0_InterruptHandler();
  3488  0183  0833               	movf	_TMR0_InterruptHandler+1,w
  3489  0184  008A               	movwf	10
  3490  0185  0832               	movf	_TMR0_InterruptHandler,w
  3491  0186  000A               	callw
  3492  0187  3181               	pagesel	$
  3493  0188  0008               	return
  3494  0189                     __end_of_TMR0_CallBack:	
  3495                           
  3496                           	psect	text30
  3497  0106                     __ptext30:	
  3498 ;; *************** function _TMR0_Callback *****************
  3499 ;; Defined at:
  3500 ;;		line 90 in file "main.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;		None
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;		None
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  1    wreg      void 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0
  3509 ;; Tracked objects:
  3510 ;;		On entry : 1F/0
  3511 ;;		On exit  : 1F/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3514 ;;      Params:         0       0       0       0
  3515 ;;      Locals:         0       0       0       0
  3516 ;;      Temps:          0       0       0       0
  3517 ;;      Totals:         0       0       0       0
  3518 ;;Total ram usage:        0 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		_main
  3524 ;;		_TMR0_CallBack
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           
  3529                           ;psect for function _TMR0_Callback
  3530  0106                     _TMR0_Callback:	
  3531  0106  3008               	movlw	8
  3532                           
  3533                           ;main.c: 92: static uint8_t cntr = 0;;main.c: 94: cntr++;
  3534                           
  3535                           ;incstack = 0
  3536                           ; Regs used in _TMR0_Callback: [wreg+status,2+status,0]
  3537  0107  0AAC               	incf	TMR0_Callback@cntr,f
  3538                           
  3539                           ;main.c: 96: if (cntr >= 8)
  3540  0108  022C               	subwf	TMR0_Callback@cntr,w
  3541  0109  1C03               	skipc
  3542  010A  0008               	return
  3543  010B  3001               	movlw	1
  3544                           
  3545                           ;main.c: 97: {;main.c: 98: cntr = 0;
  3546  010C  01AC               	clrf	TMR0_Callback@cntr
  3547                           
  3548                           ;main.c: 102: WakeTimer++;
  3549  010D  07AE               	addwf	_WakeTimer,f	;volatile
  3550  010E  3000               	movlw	0
  3551  010F  3DAF               	addwfc	_WakeTimer+1,f	;volatile
  3552  0110  3DB0               	addwfc	_WakeTimer+2,f	;volatile
  3553  0111  3DB1               	addwfc	_WakeTimer+3,f	;volatile
  3554                           
  3555                           ;main.c: 105: if (StartDebounceTimer)
  3556  0112  0877               	movf	_StartDebounceTimer,w	;volatile
  3557  0113  1D03               	btfss	3,2
  3558                           
  3559                           ;main.c: 106: {;main.c: 107: StartDebounceTimer--;
  3560  0114  03F7               	decf	_StartDebounceTimer,f	;volatile
  3561                           
  3562                           ;main.c: 108: };main.c: 110: if (SpeedDebounceTimer)
  3563  0115  0876               	movf	_SpeedDebounceTimer,w	;volatile
  3564  0116  1D03               	btfss	3,2
  3565                           
  3566                           ;main.c: 111: {;main.c: 112: SpeedDebounceTimer--;
  3567  0117  03F6               	decf	_SpeedDebounceTimer,f	;volatile
  3568                           
  3569                           ;main.c: 113: };main.c: 115: if (ShutdownDelayTimer)
  3570  0118  0878               	movf	_ShutdownDelayTimer,w	;volatile
  3571  0119  1D03               	btfss	3,2
  3572                           
  3573                           ;main.c: 116: {;main.c: 117: ShutdownDelayTimer--;
  3574  011A  03F8               	decf	_ShutdownDelayTimer,f	;volatile
  3575                           
  3576                           ;main.c: 118: };main.c: 120: if (TempDelayTimer)
  3577  011B  0873               	movf	_TempDelayTimer+3,w	;volatile
  3578  011C  0472               	iorwf	_TempDelayTimer+2,w	;volatile
  3579  011D  0471               	iorwf	_TempDelayTimer+1,w	;volatile
  3580  011E  0470               	iorwf	_TempDelayTimer,w	;volatile
  3581  011F  1903               	skipnz
  3582  0120  0008               	return
  3583                           
  3584                           ;main.c: 121: {;main.c: 122: TempDelayTimer--;
  3585  0121  3001               	movlw	1
  3586  0122  02F0               	subwf	_TempDelayTimer,f	;volatile
  3587  0123  3000               	movlw	0
  3588  0124  3BF1               	subwfb	_TempDelayTimer+1,f	;volatile
  3589  0125  3BF2               	subwfb	_TempDelayTimer+2,f	;volatile
  3590  0126  3BF3               	subwfb	_TempDelayTimer+3,f	;volatile
  3591  0127  0008               	return
  3592  0128                     __end_of_TMR0_Callback:	
  3593                           
  3594                           	psect	text31
  3595  019F                     __ptext31:	
  3596 ;; *************** function _PIN_MANAGER_IOC *****************
  3597 ;; Defined at:
  3598 ;;		line 125 in file "mcc_generated_files/pin_manager.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;		None
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;		None
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      void 
  3605 ;; Registers used:
  3606 ;;		wreg, status,2, status,0, pclath, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 1F/7
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3612 ;;      Params:         0       0       0       0
  3613 ;;      Locals:         0       0       0       0
  3614 ;;      Temps:          0       0       0       0
  3615 ;;      Totals:         0       0       0       0
  3616 ;;Total ram usage:        0 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; Hardware stack levels required when called:    1
  3619 ;; This function calls:
  3620 ;;		_IOCAF2_ISR
  3621 ;;		_IOCAF3_ISR
  3622 ;; This function is called by:
  3623 ;;		_INTERRUPT_InterruptManager
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           
  3628                           ;psect for function _PIN_MANAGER_IOC
  3629  019F                     _PIN_MANAGER_IOC:	
  3630                           
  3631                           ;pin_manager.c: 128: if(IOCAFbits.IOCAF2 == 1)
  3632                           
  3633                           ;incstack = 0
  3634                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  3635  019F  0027               	movlb	7	; select bank7
  3636  01A0  1D13               	btfss	19,2	;volatile
  3637  01A1  29A3               	goto	i1l1333
  3638                           
  3639                           ;pin_manager.c: 129: {;pin_manager.c: 130: IOCAF2_ISR();
  3640  01A2  21E7               	fcall	_IOCAF2_ISR
  3641  01A3                     i1l1333:	
  3642                           
  3643                           ;pin_manager.c: 131: };pin_manager.c: 134: if(IOCAFbits.IOCAF3 == 1)
  3644  01A3  1D93               	btfss	19,3	;volatile
  3645  01A4  0008               	return
  3646                           
  3647                           ;pin_manager.c: 135: {;pin_manager.c: 136: IOCAF3_ISR();
  3648  01A5  29E5               	ljmp	i1l43
  3649  01A6                     __end_of_PIN_MANAGER_IOC:	
  3650                           
  3651                           	psect	text32
  3652  01E5                     __ptext32:	
  3653 ;; *************** function _IOCAF3_ISR *****************
  3654 ;; Defined at:
  3655 ;;		line 161 in file "mcc_generated_files/pin_manager.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;		None
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;		None
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  1    wreg      void 
  3662 ;; Registers used:
  3663 ;;		wreg, status,2, status,0
  3664 ;; Tracked objects:
  3665 ;;		On entry : 1F/7
  3666 ;;		On exit  : 1F/7
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3669 ;;      Params:         0       0       0       0
  3670 ;;      Locals:         0       0       0       0
  3671 ;;      Temps:          0       0       0       0
  3672 ;;      Totals:         0       0       0       0
  3673 ;;Total ram usage:        0 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_PIN_MANAGER_IOC
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           
  3683                           ;psect for function _IOCAF3_ISR
  3684  01E5                     _IOCAF3_ISR:	
  3685  01E5                     i1l43:	
  3686                           ;pin_manager.c: 167: {
  3687                           
  3688                           ;incstack = 0
  3689                           ; Regs used in _IOCAF3_ISR: [wreg+status,2+status,0]
  3690                           
  3691                           
  3692                           ;pin_manager.c: 169: };pin_manager.c: 170: IOCAFbits.IOCAF3 = 0;
  3693  01E5  1193               	bcf	19,3	;volatile
  3694  01E6  0008               	return
  3695  01E7                     __end_of_IOCAF3_ISR:	
  3696                           
  3697                           	psect	text33
  3698  01E7                     __ptext33:	
  3699 ;; *************** function _IOCAF2_ISR *****************
  3700 ;; Defined at:
  3701 ;;		line 113 in file "mcc_generated_files/pin_manager.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;		None
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;		None
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  1    wreg      void 
  3708 ;; Registers used:
  3709 ;;		wreg, status,2, status,0
  3710 ;; Tracked objects:
  3711 ;;		On entry : 1F/7
  3712 ;;		On exit  : 1F/7
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3715 ;;      Params:         0       0       0       0
  3716 ;;      Locals:         0       0       0       0
  3717 ;;      Temps:          0       0       0       0
  3718 ;;      Totals:         0       0       0       0
  3719 ;;Total ram usage:        0 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; This function calls:
  3722 ;;		Nothing
  3723 ;; This function is called by:
  3724 ;;		_PIN_MANAGER_IOC
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           
  3729                           ;psect for function _IOCAF2_ISR
  3730  01E7                     _IOCAF2_ISR:	
  3731                           
  3732                           ;pin_manager.c: 121: };pin_manager.c: 122: IOCAFbits.IOCAF2 = 0;
  3733                           
  3734                           ;pin_manager.c: 119: {
  3735                           
  3736                           ;incstack = 0
  3737                           ; Regs used in _IOCAF2_ISR: [wreg+status,2+status,0]
  3738  01E7  1113               	bcf	19,2	;volatile
  3739  01E8  0008               	return
  3740  01E9                     __end_of_IOCAF2_ISR:	
  3741  007E                     btemp	set	126	;btemp
  3742  007E                     int$flags	set	126
  3743  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         24
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      14
    BANK0            80      0      21
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Callback(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Callback(), Absolute function(), 

    IOCAF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    IOCAF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    _main->_CheckForButtonPushes
    _UpdateLEDs->_PWM3_DutyCycleSet

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     507
                                              3 COMMON     1     1      0
               _CheckForButtonPushes
                       _HIGH_LED_OFF
                        _HIGH_LED_ON
                        _LOW_LED_OFF
                         _LOW_LED_ON
                     _MEDIUM_LED_OFF
                      _MEDIUM_LED_ON
                          _PWM3_Stop
                  _SYSTEM_Initialize
                      _SetAllLEDsOff
           _TMR0_SetInterruptHandler
                         _UpdateLEDs
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SetAllLEDsOff                                        0     0      0       0
                       _HIGH_LED_OFF
                        _LOW_LED_OFF
                     _MEDIUM_LED_OFF
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CheckForButtonPushes                                 1     1      0     228
                                              2 COMMON     1     1      0
          _SpeedButtonJustGotPressed
         _SpeedButtonJustGotReleased
              _SpeedButtonPressedRaw
          _StartButtonJustGotPressed
         _StartButtonJustGotReleased
              _StartButtonPressedRaw
 ---------------------------------------------------------------------------------
 (2) _StartButtonPressedRaw                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _StartButtonJustGotReleased                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _StartButtonJustGotPressed                            0     0      0       0
                         _PWM3_Start
                          _PWM3_Stop
 ---------------------------------------------------------------------------------
 (1) _PWM3_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM3_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SpeedButtonPressedRaw                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SpeedButtonJustGotReleased                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SpeedButtonJustGotPressed                            0     0      0     204
                         _UpdateLEDs
 ---------------------------------------------------------------------------------
 (1) _UpdateLEDs                                           0     0      0     204
                       _HIGH_LED_OFF
                        _HIGH_LED_ON
                        _LOW_LED_OFF
                         _LOW_LED_ON
                     _MEDIUM_LED_OFF
                      _MEDIUM_LED_ON
                  _PWM3_DutyCycleSet
                 _PWM3_LoadBufferSet
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadBufferSet                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_DutyCycleSet                                    2     0      2     204
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _MEDIUM_LED_ON                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MEDIUM_LED_OFF                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LOW_LED_ON                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LOW_LED_OFF                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HIGH_LED_ON                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HIGH_LED_OFF                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
                      _TMR0_Callback *
 ---------------------------------------------------------------------------------
 (8) _TMR0_Callback                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF2_ISR
                         _IOCAF3_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCAF3_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCAF2_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckForButtonPushes
     _SpeedButtonJustGotPressed
       _UpdateLEDs
         _HIGH_LED_OFF
         _HIGH_LED_ON
         _LOW_LED_OFF
         _LOW_LED_ON
         _MEDIUM_LED_OFF
         _MEDIUM_LED_ON
         _PWM3_DutyCycleSet
         _PWM3_LoadBufferSet
     _SpeedButtonJustGotReleased
     _SpeedButtonPressedRaw
     _StartButtonJustGotPressed
       _PWM3_Start
       _PWM3_Stop
     _StartButtonJustGotReleased
     _StartButtonPressedRaw
   _HIGH_LED_OFF
   _HIGH_LED_ON
   _LOW_LED_OFF
   _LOW_LED_ON
   _MEDIUM_LED_OFF
   _MEDIUM_LED_ON
   _PWM3_Stop
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _TMR0_Initialize
     _WDT_Initialize
   _SetAllLEDsOff
     _HIGH_LED_OFF
     _LOW_LED_OFF
     _MEDIUM_LED_OFF
   _TMR0_SetInterruptHandler
   _UpdateLEDs
     _HIGH_LED_OFF
     _HIGH_LED_ON
     _LOW_LED_OFF
     _LOW_LED_ON
     _MEDIUM_LED_OFF
     _MEDIUM_LED_ON
     _PWM3_DutyCycleSet
     _PWM3_LoadBufferSet

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF2_ISR
     _IOCAF3_ISR
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_Callback *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      4       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      23       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      15       6       26.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      23      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Oct 17 16:54:39 2018

                     ??_PWM3_DutyCycleSet 007C                               __CFG_CP$OFF 0000  
                                      PL2 016E                                        PL4 0080  
                                      PL6 0086                           _timer0ReloadVal 0034  
                      _SpeedDebounceTimer 0076                                       l205 0105  
                                     l229 016D                                       l270 007E  
                                     u757 0046                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_LVP$OFF 0000  
               __end_of_PWM3_DutyCycleSet 01B8                                      l1205 00FA  
                                    l1401 00D7                                      l1147 01E3  
                                    l1315 015C                                      l1157 01D4  
                                    l1325 0165                                      l1191 00EE  
                                    l1319 0161                                      l1185 00E5  
                                    l1409 00E2                                      l1371 00A9  
                                    l1363 009E                                      l1443 0052  
                                    l1435 0035                                      l1197 00F3  
                                    l1461 0065                                      l1445 004E  
                                    l1437 0041                                      l1375 00B1  
                                    l1359 0098                                      l1279 0173  
                                    l1447 0055                                      l1385 00BE  
                                    l1473 0073                                      l1467 006C  
                                    l1397 00CF                                      l1389 00C4  
                                    l1479 007A                                      _LATA 010C  
                                    i1l43 01E5                                      i1l82 000B  
                                    i1l86 000F                     ?_CheckForButtonPushes 007A  
                                    _TMR0 0015                    ?_SpeedButtonPressedRaw 007A  
                                    _WPUA 020C               ?_SpeedButtonJustGotReleased 007A  
                            __CFG_WRT$OFF 0000                                      _main 0021  
                                    fsr0h 0005                                      indf0 0000  
                                    fsr0l 0004                                      btemp 007E  
                                    start 0011                           ??_MEDIUM_LED_ON 007A  
                 __end_of_TMR0_Initialize 017F            __size_of_OSCILLATOR_Initialize 0007  
                     __size_of_IOCAF2_ISR 0002                       __size_of_IOCAF3_ISR 0002  
                             ?_LOW_LED_ON 007A             __end_of_OSCILLATOR_Initialize 0198  
                                   ?_main 007A                             __CFG_WDTE$OFF 0000  
                                   _TRISA 008C         __size_of_TMR0_SetInterruptHandler 0005  
                       TMR0_Callback@cntr 002C                 ?_TMR0_SetInterruptHandler 007A  
                        __end_of_TMR0_ISR 01C7                               ?_PWM3_Start 007A  
                 __end_of_PIN_MANAGER_IOC 01A6                        __size_of_PWM3_Stop 0003  
                          _WDT_Initialize 01C7                   __end_of_PWM3_Initialize 0142  
                          __CFG_BOREN$OFF 0000                                     pclath 000A  
      __size_of_SpeedButtonJustGotPressed 0008                                     status 0003  
                                   wtemp0 007E           PWM3_DutyCycleSet@dutyCycleCount 007A  
                          __CFG_MCLRE$OFF 0000                           __initialization 0012  
                    __end_of_HIGH_LED_OFF 01E5                              __end_of_main 0080  
                 ??_StartButtonPressedRaw 007A               ?_INTERRUPT_InterruptManager 007A  
                _SpeedLeftButtonPressTime 0020                          _StartButtonState 0075  
                        ??_MEDIUM_LED_OFF 007A                                    ??_main 007D  
                          __CFG_PLLEN$OFF 0000                      __size_of_HIGH_LED_ON 0002  
             ??_StartButtonJustGotPressed 007A                              ?_LOW_LED_OFF 007A  
                  __end_of_WDT_Initialize 01CB                    __size_of_SetAllLEDsOff 0003  
              __size_of_PWM3_DutyCycleSet 0006                    ??_CheckForButtonPushes 007C  
                                  _APFCON 011D               __size_of_PWM3_LoadBufferSet 0003  
                                  _ANSELA 018C                                    _BORCON 0116  
                                  i1l1333 01A3                                    _ODCONA 028C  
                                  i1l1289 017F                                    _OSCCON 0099  
                                  _WDTCON 0097                          _SpeedButtonState 0074  
                     __size_of_LOW_LED_ON 0003                            __CFG_PWRTE$OFF 0000  
                              _MotorState 002D                         __end_of_PWM3_Stop 01D1  
                          __CFG_STVREN$ON 0000                       __size_of_PWM3_Start 0003  
                        ?_TMR0_Initialize 007A       __size_of_SpeedButtonJustGotReleased 0001  
                              _UpdateLEDs 00E4                           ?_WDT_Initialize 007A  
                   __end_of_TMR0_CallBack 0189  TMR0_SetInterruptHandler@InterruptHandler 007A  
                        ?_PIN_MANAGER_IOC 007A                     __end_of_TMR0_Callback 0128  
                            ??_IOCAF2_ISR 007A                              ??_IOCAF3_ISR 007A  
                        ?_PWM3_Initialize 007A                         _SYSTEM_Initialize 01BD  
                 __end_of__initialization 001E                        ?_SYSTEM_Initialize 007A  
               _StartButtonJustGotPressed 015B                             _SetAllLEDsOff 01CB  
                          __pcstackCOMMON 007A                       ??_SYSTEM_Initialize 007A  
                               ?_TMR0_ISR 007A                                __end_ofPL2 0173  
                              __end_ofPL4 0086                                __end_ofPL6 008B  
                      __end_of_IOCAF2_ISR 01E9                        __end_of_IOCAF3_ISR 01E7  
                          _OPTION_REGbits 0095                   ??_SpeedButtonPressedRaw 007A  
               __end_of_SYSTEM_Initialize 01C2              ??_StartButtonJustGotReleased 007A  
                              __pbssBANK0 0020                     __size_of_HIGH_LED_OFF 0002  
                          ?_SetAllLEDsOff 007A                                __pmaintext 0021  
        __end_of_TMR0_SetInterruptHandler 01BD                                ??_TMR0_ISR 007A  
                              __pintentry 0004                              ??_LOW_LED_ON 007A  
                             ?_UpdateLEDs 007A                                   _OSCTUNE 0098  
                                 _PWM3DCH 0DB4                                   _PWM3DCL 0DB3  
                                 _PWM3CON 0DBB                                   _PWM3OFH 0DB8  
                                 _PWM3OFL 0DB7                                   _PWM3PHH 0DB2  
                                 _PWM3PHL 0DB1                                   _PWM3PRH 0DB6  
                                 _PWM3PRL 0DB5                              ??_PWM3_Start 007A  
                            _HIGH_LED_OFF 01E3                      __size_of_LOW_LED_OFF 0003  
                      _ShutdownDelayTimer 0078                        __end_of_LOW_LED_ON 01DA  
          __size_of_StartButtonPressedRaw 0007             __end_of_StartButtonPressedRaw 019F  
                      __end_of_PWM3_Start 01D4                     __end_of_MEDIUM_LED_ON 01DF  
                                 __ptext1 01B8                                   __ptext2 01CB  
                                 __ptext3 01BD                                   __ptext4 01C7  
                                 __ptext5 0173                                   __ptext6 0128  
                                 __ptext7 0142                                   __ptext8 0191  
                                 __ptext9 008B                     _OSCILLATOR_Initialize 0191  
                ??_PIN_MANAGER_Initialize 007A                                 _IOCAFbits 0393  
                               _IOCANbits 0392                                 _IOCAPbits 0391  
              __size_of_SYSTEM_Initialize 0005                                   clrloop0 01A7  
                    end_of_initialization 001E                           ??_SetAllLEDsOff 007A  
                     __size_of_UpdateLEDs 0022                 _StartRightButtonPressTime 0024  
                               _PWM3LDCON 0DBF                                 _PWM3OFCON 0DC0  
      __size_of_StartButtonJustGotPressed 0013                             ??_HIGH_LED_ON 007A  
                        ??_WDT_Initialize 007A                  _TMR0_SetInterruptHandler 01B8  
                               _PORTAbits 000C                                 _PWM3_Stop 01CE  
                        __CFG_FOSC$INTOSC 0000                __end_of_PWM3_LoadBufferSet 01D7  
      __end_of_StartButtonJustGotReleased 01EA                _StartButtonJustGotReleased 01E9  
           __size_of_CheckForButtonPushes 0059                ?_SpeedButtonJustGotPressed 007A  
                       __size_of_TMR0_ISR 0005                                ?_PWM3_Stop 007A  
                  ?_OSCILLATOR_Initialize 007A                       start_initialization 0012  
                __size_of_TMR0_Initialize 000C           __size_of_PIN_MANAGER_Initialize 0019  
                     __end_of_HIGH_LED_ON 01E3                   __size_of_MEDIUM_LED_OFF 0002  
          __size_of_SpeedButtonPressedRaw 0006             __end_of_SpeedButtonPressedRaw 01B2  
                           _SpeedLEDState 0079              ??_SpeedButtonJustGotReleased 007A  
                           _PWM3LDCONbits 0DBF                  __size_of_PIN_MANAGER_IOC 0007  
                               _WakeTimer 002E                          __CFG_LPBOREN$OFF 0000  
                __size_of_PWM3_Initialize 001A         __end_of_SpeedButtonJustGotPressed 0191  
                  __size_of_TMR0_CallBack 000A                    __size_of_TMR0_Callback 0022  
                            ??_UpdateLEDs 007C                               __pbssCOMMON 0070  
                               ___latbits 0000                     _TMR0_InterruptHandler 0032  
                               __pnvBANK0 002E                    _PIN_MANAGER_Initialize 0142  
                      __end_of_UpdateLEDs 0106              ??_INTERRUPT_InterruptManager 007A  
                             ??_PWM3_Stop 007A                               _HIGH_LED_ON 01E1  
                           ??_LOW_LED_OFF 007A                  _CheckForButtonPushes$463 007C  
                           _TMR0_CallBack 017F                             _TMR0_Callback 0106  
                       ??_TMR0_Initialize 007A                                  _LATAbits 010C  
                               clear_ram0 01A6       __size_of_INTERRUPT_InterruptManager 000D  
              ??_TMR0_SetInterruptHandler 007C                                  _PWM3INTE 0DBC  
                                _PWM3INTF 0DBD                                  _PWM3TMRH 0DBA  
                                _PWM3TMRL 0DB9                                  _TMR0_ISR 01C2  
                       ??_PIN_MANAGER_IOC 007A                         ??_PWM3_Initialize 007A  
                   _StartButtonPressedRaw 0198                            ?_TMR0_CallBack 007A  
                          _MEDIUM_LED_OFF 01DF               ?_StartButtonJustGotReleased 007A  
                          ?_TMR0_Callback 007A                       __end_of_LOW_LED_OFF 01DD  
      __end_of_SpeedButtonJustGotReleased 01EB                _SpeedButtonJustGotReleased 01EA  
                  __size_of_MEDIUM_LED_ON 0002                        _PWM3_LoadBufferSet 01D4  
                   __end_of_SetAllLEDsOff 01CE               ??_SpeedButtonJustGotPressed 007C  
                     ?_PWM3_LoadBufferSet 007A                   ??_OSCILLATOR_Initialize 007A  
            __end_of_CheckForButtonPushes 00E4                   _IOCAF2_InterruptHandler 002A  
                  __end_of_MEDIUM_LED_OFF 01E1                                  __ptext10 0198  
                                __ptext11 01E9                                  __ptext20 01B2  
                                __ptext12 015B                                  __ptext21 01DD  
                                __ptext13 01CE                                  __ptext30 0106  
                                __ptext22 01DF                                  __ptext14 01D1  
                                __ptext31 019F                                  __ptext23 01D7  
                                __ptext15 01AC                                  __ptext32 01E5  
                                __ptext24 01DA                                  __ptext16 01EA  
                                __ptext33 01E7                                  __ptext25 01E1  
                                __ptext17 0189                                  __ptext26 01E3  
                                __ptext18 00E4                                  __ptext19 01D4  
                                __ptext28 01C2                                  __ptext29 017F  
                    ??_PWM3_LoadBufferSet 007A                                _IOCAF2_ISR 01E7  
                              _IOCAF3_ISR 01E5                             __size_of_main 005F  
                                int$flags 007E                        _StartDebounceTimer 0077  
      __end_of_INTERRUPT_InterruptManager 0011                _INTERRUPT_InterruptManager 0004  
                  ?_StartButtonPressedRaw 007A                             _MEDIUM_LED_ON 01DD  
              ?_StartButtonJustGotPressed 007A                                _INTCONbits 000B  
               _SpeedButtonJustGotPressed 0189                           ??_TMR0_CallBack 007A  
                         ?_MEDIUM_LED_OFF 007A                               _LOW_LED_OFF 01DA  
                         ??_TMR0_Callback 007A                               _PWM3CONbits 0DBB  
                           ?_HIGH_LED_OFF 007A                   __size_of_WDT_Initialize 0004  
                                intlevel1 0000                     _SpeedButtonPressedRaw 01AC  
                 ?_PIN_MANAGER_Initialize 007A                         __CFG_CLKOUTEN$OFF 0000  
                              _PWM3CLKCON 0DBE                            ?_MEDIUM_LED_ON 007A  
     __size_of_StartButtonJustGotReleased 0001                                _LOW_LED_ON 01D7  
                            ?_HIGH_LED_ON 007A                                _OPTION_REG 0095  
                         _TMR0_Initialize 0173         __end_of_StartButtonJustGotPressed 016E  
                          ??_HIGH_LED_OFF 007A                               _VREGCONbits 0197  
                              _PWM3_Start 01D1                               ?_IOCAF2_ISR 007A  
                             ?_IOCAF3_ISR 007A                            _TempDelayTimer 0070  
          __end_of_PIN_MANAGER_Initialize 015B                         _PWM3_DutyCycleSet 01B2  
                    _CheckForButtonPushes 008B                           _PIN_MANAGER_IOC 019F  
                      ?_PWM3_DutyCycleSet 007A                   _IOCAF3_InterruptHandler 0028  
                         _PWM3_Initialize 0128  
